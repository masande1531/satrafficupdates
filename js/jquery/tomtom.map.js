/**
 * - almond is licensed under the MIT license. See: https://github.com/jrburke/almond/.
 * - RequireJS Text is licensed under the MIT license.  See: http://github.com/requirejs/text.
 */
 var tomtom;(function(){if(typeof tomtom=="undefined"){tomtom={};var e,t,n;(function(r){function c(e,t){var n=t&&t.split("/"),r=o.map,i=r&&r["*"]||{},s,u,a,f,l,c,h;if(e&&e.charAt(0)==="."&&t){n=n.slice(0,n.length-1),e=n.concat(e.split("/"));for(l=0;h=e[l];l++)if(h===".")e.splice(l,1),l-=1;else if(h===".."){if(l===1&&(e[2]===".."||e[0]===".."))return!0;l>0&&(e.splice(l-1,2),l-=2)}e=e.join("/")}if((n||i)&&r){s=e.split("/");for(l=s.length;l>0;l-=1){u=s.slice(0,l).join("/");if(n)for(c=n.length;c>0;c-=1){a=r[n.slice(0,c).join("/")];if(a){a=a[u];if(a){f=a;break}}}f=f||i[u];if(f){s.splice(0,l,f),e=s.join("/");break}}}return e}function h(e,t){return function(){return l.apply(r,a.call(arguments,0).concat([e,t]))}}function p(e){return function(t){return c(t,e)}}function d(e){return function(t){i[e]=t}}function v(e){if(s.hasOwnProperty(e)){var t=s[e];delete s[e],u[e]=!0,f.apply(r,t)}if(!i.hasOwnProperty(e))throw new Error("No "+e);return i[e]}function m(e,t){var n,r,i=e.indexOf("!");return i!==-1?(n=c(e.slice(0,i),t),e=e.slice(i+1),r=v(n),r&&r.normalize?e=r.normalize(e,p(t)):e=c(e,t)):e=c(e,t),{f:n?n+"!"+e:e,n:e,p:r}}function g(e){return function(){return o&&o.config&&o.config[e]||{}}}var i={},s={},o={},u={},a=[].slice,f,l;f=function(e,t,n,o){var a=[],f,l,c,p,y,b;o=o||e;if(typeof n=="function"){t=!t.length&&n.length?["require","exports","module"]:t;for(b=0;b<t.length;b++){y=m(t[b],o),c=y.f;if(c==="require")a[b]=h(e);else if(c==="exports")a[b]=i[e]={},f=!0;else if(c==="module")l=a[b]={id:e,uri:"",exports:i[e],config:g(e)};else if(i.hasOwnProperty(c)||s.hasOwnProperty(c))a[b]=v(c);else if(y.p)y.p.load(y.n,h(o,!0),d(c),{}),a[b]=i[c];else if(!u[c])throw new Error(e+" missing "+c)}p=n.apply(i[e],a);if(e)if(l&&l.exports!==r&&l.exports!==i[e])i[e]=l.exports;else if(p!==r||!f)i[e]=p}else e&&(i[e]=n)},e=t=l=function(e,t,n,i){return typeof e=="string"?v(m(e,t).f):(e.splice||(o=e,t.splice?(e=t,t=n,n=null):e=r),t=t||function(){},i?f(r,e,t,n):setTimeout(function(){f(r,e,t,n)},15),l)},l.config=function(e){return o=e,l},n=function(e,t,n){t.splice||(n=t,t=[]),s[e]=[e,t,n]},n.amd={jQuery:!0}})(),tomtom.requirejs=e,tomtom.require=t,tomtom.define=n}})(),tomtom.define("lib/almond",function(){}),tomtom.define("jquery",[],function(){return jQuery}),tomtom.define("OpenLayers",[],function(){return OpenLayers}),tomtom.define("Main",["./OpenLayers"],function(){window.tomtom||(window.tomtom={}),window.tomtom.dom={},window.tomtom.layers={},window.tomtom.services={},window.tomtom.controls={},typeof String.prototype.trim!="function"&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(this==null)throw new TypeError;var t=Object(this),n=t.length>>>0;if(n===0)return-1;var r=0;arguments.length>0&&(r=Number(arguments[1]),r!=r?r=0:r!=0&&r!=Infinity&&r!=-Infinity&&(r=(r>0||-1)*Math.floor(Math.abs(r))));if(r>=n)return-1;var i=r>=0?r:Math.max(n-Math.abs(r),0);for(;i<n;i++)if(i in t&&t[i]===e)return i;return-1}),window.tomtom.setImagePath=function(e){OpenLayers.ImgPath=e},tomtom.setImagePath("./images/"),window.tomtom.API_BASE_URL="https://api.tomtom.com/",window.tomtom.releaseInfo={version:"1.0.5-RELEASE",build:"DEV"},window.tomtom.isDebugMode=!1,window.tomtom.apiKey=null,window.tomtom.languages={en_US:{units:{distance:{meter:"m;; m",km:"km;; km",yard:"yd;; yds",mile:"mi;; mi"},time:{day:"day;; days",hour:"hour;; hours",minute:"min;; mins"}},errors:{Unknown:"Sorry, an error occurred. Please try again or come back later"},IncidentItem:{from:"From",to:"To",delay:"Delay",length:"Length"},IncidentBalloon:{Cluster:{title:"Incidents in this area: ",listHeader:"{count} most severe incidents",orderedByLength:"(Ordered by length)",orderedByDelay:"(Ordered by delay)"},zoomIn:"Click to zoom in"}}}}),tomtom.define("Logger",["./Main","./OpenLayers"],function(){return tomtom.Logger=OpenLayers.Class({initialize:function(){},info:function(){this._log("info",arguments)},debug:function(){this._log("debug",arguments)},log:function(){this._log("log",arguments)},error:function(){this._log("error",arguments)},warn:function(){this._log("warn",arguments)},_log:function(e,t){if(!tomtom.isDebugMode&&(e=="log"||e=="debug"))return;if(typeof console!="undefined"){var n=console[e];n?n.apply?n.apply(console,t):n(t[0]):n!="log"&&this._log("log",t)}}}),tomtom.Logger}),tomtom.define("Utils",["./Main"],function(){tomtom.Utils={hostIndex:0,hosts:[],getServiceUrl:function(e,t,n,r){var i=tomtom.API_BASE_URL;if(t){paramCount=0,e.indexOf("?")==-1&&(e+="?");for(var s in t)paramCount>0&&(e+="&"),e+=s+"="+t[s],paramCount++}return tomtom.proxyUrl&&(i=tomtom.proxyUrl),typeof r!="undefined"&&(r?i=i.replace(/https?:\/\//g,"https://"):i=i.replace(/https?:\/\//g,"http://")),n&&(i="http://"+this.getRandomHost(i)),i+e},getRandomHost:function(e){e=e.replace(/https?:\/\//g,"");if(typeof tomtom.enableHostCycling=="undefined"||tomtom.enableHostCycling)this.hosts.length==0&&this.initHosts(),e=this.hosts[this.hostIndex],this.hostIndex++,this.hostIndex>3&&(this.hostIndex=0);return e},initHosts:function(){var e=tomtom.API_BASE_URL;tomtom.proxyUrl&&(e=tomtom.proxyUrl),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"a.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"b.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"c.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"d."))},isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},zeroPad:function(e,t){e=String(e);var n=[];for(var r=0;r<t;++r)n.push("0");return n.join("").substring(0,t-e.length)+e},hitch:function(e,t){return function(){return t.apply(e,arguments)}},setCookie:function(e,t,n){if(n){var r=new Date;r.setTime(r.getTime()+n*24*60*60*1e3);var i="; expires="+r.toGMTString()}else var i="";document.cookie=e+"="+t+i+"; path=/"},getCookie:function(e){var t=e+"=",n=document.cookie.split(";");for(var r=0;r<n.length;r++){var i=n[r];while(i.charAt(0)==" ")i=i.substring(1,i.length);if(i.indexOf(t)==0)return i.substring(t.length,i.length)}return null},removeCookie:function(e){this.setCookie(e,"",-1)},formatSeconds:function(e){if(e==0)return"0 min";if(e<60)return e+" secs";if(e>=60&&e<=3600)return this.round(e/60,1)+" mins";if(e>=3600)return this.round(e/3600,1)+" hours"},metersToMiles:function(t){return t*e/5280},round:function(e,t){return Math.round(e*Math.pow(10,t))/Math.pow(10,t)}};var e=3.28084,t=5280;return tomtom.Utils}),tomtom.define("BaseObject",["./Main","./Logger","./Utils","./OpenLayers"],function(e,t,n){return tomtom.BaseObject=OpenLayers.Class({initialize:function(){this.log=new t},hitch:function(e){return n.hitch(this,e)}}),tomtom.BaseObject}),tomtom.define("dom/DomUtilResult",["../BaseObject","../Utils","../OpenLayers"],function(e,t){return tomtom.dom.DomUtilResult=OpenLayers.Class(e,{initialize:function(e,t){this.elements=e,this.dutil=t},html:function(e){if(e==null){var t=this.first();return t?t.innerHTML:null}return this.each(function(t){t.innerHTML=e}),this},css:function(e,t){if(t==null){var n=this.first();return n?this.dutil.css(n,e):null}this.each(this.hitch(function(n){this.dutil.css(n,e,t)}))},append:function(e){if(typeof e=="string")this.each(function(t){t.innerHTML+=e});else{var t=this.first();t&&t.appendChild(e)}return this},first:function(){return this.get(0)},get:function(e){return e==null&&(e=0),this.elements.length>e?this.elements[e]:null},each:function(e){if(!this.elements.length)return e(this.elements,0),this;for(var t=0;t<this.elements.length;t++){var n=e(this.elements[t],t);if(n===!1)break}return this},val:function(e){if(e==undefined){var t=this.first();return t&&t.value?t.value:null}this.dutil.val(this.elements,e)},find:function(e){return this.dutil.query(e,this.elements)},bind:function(e,t,n){return this.dutil.bind(this.elements,e,t,n)},attr:function(e,t){return this.dutil.attr(this.elements,e,t)},data:function(e,t){return this.dutil.data(this.elements,e,t)},removeAttr:function(e){return this.dutil.removeAttr(this.elements,e),this},next:function(e){return this.dutil.next(this.elements,e)},prev:function(e){return this.dutil.prev(this.elements,e)},children:function(e){return this.dutil.children(this.elements,e)},length:function(){return this.elements.length},addClass:function(e){return this.dutil.addClass(this.elements,e),this},removeClass:function(e){return this.dutil.removeClass(this.elements,e),this},offset:function(){return this.dutil.offset(this.first())},position:function(){return this.dutil.position(this.first())},offsetHeight:function(){var e=this.first();return e?e.offsetHeight:null},offsetWidth:function(){var e=this.first();return e?e.offsetWidth:null}}),tomtom.dom.DomUtilResult}),tomtom.define("dom/DomUtil",["../BaseObject","./DomUtilResult","../OpenLayers"],function(e){return tomtom.dom.DomUtil=OpenLayers.Class(e,{initialize:function(){},query:function(e,t){},animate:function(e,t){},css:function(e,t,n){},offset:function(e){},jsonp:function(e){},bind:function(e,t,n,r){},unbind:function(e){},mixin:function(e,t){},addClass:function(e,t){},removeClass:function(e,t){},wrap:function(e){return new tomtom.dom.DomUtilResult(e,this)},empty:function(e){while(e.children.length>0)e.removeChild(e.children[0]);return new tomtom.dom.DomUtilResult(e,this)},html:function(e,t){typeof t=="string"?e.innerHTML=t:(this.empty(e),e.appendChild(t))},append:function(e,t){return typeof t=="string"?e.innerHTML+=t:e.appendChild(t),new tomtom.dom.DomUtilResult(e,this)},unbindAll:function(e){for(var t=0;t<e.length;t++)this.unbind(e[t])},attr:function(e,t,n){},removeAttr:function(e,t){},data:function(e,t,n){},val:function(e,t){},next:function(e,t){},prev:function(e,t){},children:function(e,t){},viewport:function(){},dimensions:function(e){}}),tomtom.dom.DomUtil}),tomtom.define("jqueryEasing",["jquery"],function(e){e.easing.jswing=e.easing.swing,e.extend(e.easing,{def:"easeOutQuad",swing:function(t,n,r,i,s){return e.easing[e.easing.def](t,n,r,i,s)},easeInQuad:function(e,t,n,r,i){return r*(t/=i)*t+n},easeOutQuad:function(e,t,n,r,i){return-r*(t/=i)*(t-2)+n},easeInOutQuad:function(e,t,n,r,i){return(t/=i/2)<1?r/2*t*t+n:-r/2*(--t*(t-2)-1)+n},easeInCubic:function(e,t,n,r,i){return r*(t/=i)*t*t+n},easeOutCubic:function(e,t,n,r,i){return r*((t=t/i-1)*t*t+1)+n},easeInOutCubic:function(e,t,n,r,i){return(t/=i/2)<1?r/2*t*t*t+n:r/2*((t-=2)*t*t+2)+n},easeInQuart:function(e,t,n,r,i){return r*(t/=i)*t*t*t+n},easeOutQuart:function(e,t,n,r,i){return-r*((t=t/i-1)*t*t*t-1)+n},easeInOutQuart:function(e,t,n,r,i){return(t/=i/2)<1?r/2*t*t*t*t+n:-r/2*((t-=2)*t*t*t-2)+n},easeInQuint:function(e,t,n,r,i){return r*(t/=i)*t*t*t*t+n},easeOutQuint:function(e,t,n,r,i){return r*((t=t/i-1)*t*t*t*t+1)+n},easeInOutQuint:function(e,t,n,r,i){return(t/=i/2)<1?r/2*t*t*t*t*t+n:r/2*((t-=2)*t*t*t*t+2)+n},easeInSine:function(e,t,n,r,i){return-r*Math.cos(t/i*(Math.PI/2))+r+n},easeOutSine:function(e,t,n,r,i){return r*Math.sin(t/i*(Math.PI/2))+n},easeInOutSine:function(e,t,n,r,i){return-r/2*(Math.cos(Math.PI*t/i)-1)+n},easeInExpo:function(e,t,n,r,i){return t==0?n:r*Math.pow(2,10*(t/i-1))+n},easeOutExpo:function(e,t,n,r,i){return t==i?n+r:r*(-Math.pow(2,-10*t/i)+1)+n},easeInOutExpo:function(e,t,n,r,i){return t==0?n:t==i?n+r:(t/=i/2)<1?r/2*Math.pow(2,10*(t-1))+n:r/2*(-Math.pow(2,-10*--t)+2)+n},easeInCirc:function(e,t,n,r,i){return-r*(Math.sqrt(1-(t/=i)*t)-1)+n},easeOutCirc:function(e,t,n,r,i){return r*Math.sqrt(1-(t=t/i-1)*t)+n},easeInOutCirc:function(e,t,n,r,i){return(t/=i/2)<1?-r/2*(Math.sqrt(1-t*t)-1)+n:r/2*(Math.sqrt(1-(t-=2)*t)+1)+n},easeInElastic:function(e,t,n,r,i){var s=1.70158,o=0,u=r;if(t==0)return n;if((t/=i)==1)return n+r;o||(o=i*.3);if(u<Math.abs(r)){u=r;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(r/u);return-(u*Math.pow(2,10*(t-=1))*Math.sin((t*i-s)*2*Math.PI/o))+n},easeOutElastic:function(e,t,n,r,i){var s=1.70158,o=0,u=r;if(t==0)return n;if((t/=i)==1)return n+r;o||(o=i*.3);if(u<Math.abs(r)){u=r;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(r/u);return u*Math.pow(2,-10*t)*Math.sin((t*i-s)*2*Math.PI/o)+r+n},easeInOutElastic:function(e,t,n,r,i){var s=1.70158,o=0,u=r;if(t==0)return n;if((t/=i/2)==2)return n+r;o||(o=i*.3*1.5);if(u<Math.abs(r)){u=r;var s=o/4}else var s=o/(2*Math.PI)*Math.asin(r/u);return t<1?-0.5*u*Math.pow(2,10*(t-=1))*Math.sin((t*i-s)*2*Math.PI/o)+n:u*Math.pow(2,-10*(t-=1))*Math.sin((t*i-s)*2*Math.PI/o)*.5+r+n},easeInBack:function(e,t,n,r,i,s){return s==undefined&&(s=1.70158),r*(t/=i)*t*((s+1)*t-s)+n},easeOutBack:function(e,t,n,r,i,s){return s==undefined&&(s=1.70158),r*((t=t/i-1)*t*((s+1)*t+s)+1)+n},easeInOutBack:function(e,t,n,r,i,s){return s==undefined&&(s=1.70158),(t/=i/2)<1?r/2*t*t*(((s*=1.525)+1)*t-s)+n:r/2*((t-=2)*t*(((s*=1.525)+1)*t+s)+2)+n},easeInBounce:function(t,n,r,i,s){return i-e.easing.easeOutBounce(t,s-n,0,i,s)+r},easeOutBounce:function(e,t,n,r,i){return(t/=i)<1/2.75?r*7.5625*t*t+n:t<2/2.75?r*(7.5625*(t-=1.5/2.75)*t+.75)+n:t<2.5/2.75?r*(7.5625*(t-=2.25/2.75)*t+.9375)+n:r*(7.5625*(t-=2.625/2.75)*t+.984375)+n},easeInOutBounce:function(t,n,r,i,s){return n<s/2?e.easing.easeInBounce(t,n*2,0,i,s)*.5+r:e.easing.easeOutBounce(t,n*2-s,0,i,s)*.5+i*.5+r}})}),tomtom.define("DomUtil",["./dom/DomUtil","jquery","jqueryEasing","./dom/DomUtilResult","./Utils"],function(e,t,n,r,i){tomtom.dom.DomUtilJQuery=OpenLayers.Class(e,{initialize:function(){},query:function(e,n){return n?new r(t(n).find(e),this):new r(t(e),this)},animate:function(e,n){return n||(n={}),t(e).animate(n.properties,n.duration?n.duration:s,n.easing,n.callback),new r(e,this)},offset:function(e){return t(e).offset()},dimensions:function(e){return{width:t(e).width(),height:t(e).height(),outerWidth:t(e).outerWidth(),outerHeight:t(e).outerHeight()}},position:function(e){return t(e).position()},css:function(e,n,i){return i!=undefined?new r(t(e).css(n,i),this):t(e).css(n)},jsonp:function(e){t.ajax({url:e.url,jsonp:e.callbackParam,dataType:"jsonp",data:e.data,success:e.callback,error:e.errorCallback})},getJson:function(e){t.ajax({url:e.url,dataType:"json",data:e.data,success:e.callback,error:e.errorCallback})},bind:function(e,n,r,s){var o=s?i.hitch(s,r):r;return t(e).bind(n,o),{element:e,event:n,callback:o}},unbind:function(e){t(e.element).unbind(e.event,e.callback)},mixin:function(e,n){return t.extend(e,n)},addClass:function(e,n){t(e).addClass(n)},removeClass:function(e,n){t(e).removeClass(n)},attr:function(e,n,i){return i!=undefined?new r(t(e).attr(n,i),this):t(e).attr(n)},removeAttr:function(e,n){return new r(t(e).removeAttr(n),this)},data:function(e,n,i){return i!=undefined?new r(t(e).data(n,i),this):t(e).data(n)},val:function(e,n){return n!=undefined?new r(t(e).val(n),this):t(e).val()},next:function(e,n){return new r(t(e).next(n),this)},prev:function(e,n){return new r(t(e).prev(n),this)},children:function(e,n){return new r(t(e).children(n),this)},viewport:function(){return{width:t(window).width(),height:t(window).height()}}});var s=500;return new tomtom.dom.DomUtilJQuery}),tomtom.define("Animation",["./DomUtil","./Utils","./Main"],function(e,t){tomtom.Animation=OpenLayers.Class({initialize:function(e,t,r){this.element=e,this.effect=t,this.options=r,this.options||(this.options={}),this.options.duration||(this.options.duration=n)},dropIn:function(){var t=this.element,n=parseInt(e.css(t,"top")),r=this.options.height;return r||(r=t.offsetHeight*10),e.css(t,"top",n-r+"px"),e.css(t,"display","none"),function(){e.css(t,"display","block"),e.animate(t,{properties:{top:n},duration:this.options.duration,easing:"easeOutBounce",callback:this.options.callback})}},bounce:function(){var t=this.element,n=e.css(t,"top"),r=this.options.height;return r||(r=t.offsetHeight*2),function(){var i=util.hitch(this,function(r){e.animate(t,{properties:{top:n},duration:this.options.duration,easing:"easeOutBounce",callback:this.options.callback})});e.animate(t,{properties:{top:parseInt(n)-r},duration:this.options.duration/2,easing:"easeOutCirc",callback:function(){i(this.options.duration)}})}},fadeIn:function(){var t=this.element;return e.css(t,"opacity",0),function(){e.animate(t,{properties:{opacity:1},duration:this.options.duration,callback:this.options.callback})}},fadeOut:function(){var t=this.element;return e.css(t,"opacity",1),function(){e.animate(t,{properties:{opacity:0},duration:this.options.duration,callback:this.options.callback})}},play:function(){var e=this[this.effect];if(e&&typeof e=="function"){if(this.element.style.display=="none")return;this.animationTimeoutId&&clearTimeout(this.animationTimeoutId);var n=e.apply(this,[]);this.options.delay?this.animationTimeoutId=setTimeout(t.hitch(this,function(){n.apply(this,[])}),this.options.delay):n.apply(this,[])}}});var n=500;return tomtom.Animation}),tomtom.define("Marker",["./OpenLayers","./DomUtil","./Utils","./DomUtil","./Utils","./Animation"],function(e,t,n,r,i){var s=OpenLayers.Marker;tomtom.Marker=OpenLayers.Class(s,{initialize:function(e,t,n){this.popup=null,this.animationTimeoutId=0,this._popupHandle=null;var r=null;typeof arguments[0]=="number"&&typeof arguments[1]=="number"?r=new OpenLayers.LonLat(arguments[0],arguments[1]):(r=arguments[0],n=t),this.options=n?n:tomtom.Marker.DEFAULT_MARKER_OPTIONS;var i=new OpenLayers.Size(this.options.width,this.options.height),o=new OpenLayers.Pixel(this.options.offsetWidth,this.options.offsetHeight),u=new OpenLayers.Icon(OpenLayers.ImgPath+this.options.url,i,o);s.prototype.initialize.apply(this,[r,u])},moveToLonLat:function(e,t,n){typeof n=="undefined"&&(n=!0);var r=new OpenLayers.LonLat(e,t);n&&r.transform(this.map._userProjection,this.map.getProjectionObject());var i=this.map.getLayerPxFromViewPortPx(this.map.getPixelFromLonLat(r));this.moveTo(i),this.popup&&(this.popup.lonlat=this.lonlat,this.popup.updatePosition())},setData:function(e){this.data=e},getData:function(){return this.data},erase:function(){this.destroyPopup(),s.prototype.erase.apply(this,arguments)},destroy:function(){this.destroyPopup(),s.prototype.destroy.apply(this,arguments)},destroyPopup:function(){this._popupHandle&&r.unbind(this._popupHandle),this.popup&&this.popup.destroy()},setPopup:function(e,t,n){this.popup&&(this.destroyPopup(),this.popup=null),typeof n=="undefined"&&(n="click"),t.marker=this,this.popup=new e(t),this.popupClass=e,this.popupOptions=t,r.addClass(this.icon.imageDiv,"olPopupMarker"),this._popupHandle=r.bind(this.icon.imageDiv,n,function(e){this.showPopup(),OpenLayers.Event.stop(e)},this)},showPopup:function(){this.popup&&this.popup.div&&(r.css(this.popup.div,"display")=="none"||this.popup.div.parentNode==null||this.popup.div.parentNode.parentNode==null)&&(this.map.addPopup(this.popup,!0),this.popup.updatePosition(),this.popup.show())},hidePopup:function(){this.popup&&this.popup.div&&this.popup.hide(i.hitch(this,function(){this.map.removePopup(this.popup)}))},animate:function(e,t){(new tomtom.Animation(this.icon.imageDiv,e,t)).play()},setContextMenu:function(e){this.contextMenu&&this.contextMenu.destroy(),this.contextMenu=e,this.icon&&this.icon.imageDiv&&e.addTarget(this.icon.imageDiv,this),this.map&&!e.map&&this.map.addControl(e)},setMap:function(e){this.contextMenu&&!this.contextMenu.map&&(e.addControl(this.contextMenu),this.contextMenu.addTarget(this.icon.imageDiv,this))}}),tomtom.Marker.DEFAULT_MARKER_OPTIONS={url:"marker.png",width:51,height:60,offsetWidth:-21,offsetHeight:-49};var o=250;return tomtom.Marker}),tomtom.define("CustomIcon",["./Main"],function(e){var e=OpenLayers.Icon;return tomtom.CustomIcon=OpenLayers.Class(e,{initialize:function(e){this.url="",this.size=new OpenLayers.Size(0,0),this.calculateOffset=!1,this.imageDiv=document.createElement("div"),this.imageDiv.id=OpenLayers.Util.createUniqueID("OL_Icon_"),this.imageDiv.className=e},clone:function(){return new tomtom.CustomIcon(this.imageDiv.className)},destroy:function(){this.erase(),this.imageDiv.innerHTML="",this.imageDiv=null},draw:function(e){return this.moveTo(e),this.imageDiv},setOpacity:function(e){OpenLayers.Util.modifyDOMElement(this.imageDiv,null,null,null,null,null,null,e)},moveTo:function(e){e!=null&&(this.px=e),this.imageDiv!=null&&(this.px==null?this.display(!1):OpenLayers.Util.modifyDOMElement(this.imageDiv,null,{x:this.px.x+(this.offset?this.offset.x:0),y:this.px.y+(this.offset?this.offset.y:0)}))}}),tomtom.CustomIcon}),tomtom.define("CustomMarker",["./Marker","./CustomIcon"],function(e,t){return tomtom.CustomMarker=OpenLayers.Class(e,{initialize:function(e,n,r){this.lonlat=new OpenLayers.LonLat(e,n),this.icon=new t(r),this.events=new OpenLayers.Events(this,this.icon.imageDiv)},setClassName:function(e){this.icon.imageDiv.className=e}}),tomtom.CustomMarker}),tomtom.define("Popup",["./DomUtil","./Utils","./OpenLayers"],function(e,t){var n=OpenLayers.Popup.Anchored;return tomtom.Popup=OpenLayers.Class(n,{initialize:function(t){this.autoSize=!0,this.closeOnMove=!0,this.marker=t.marker;var r=null,i=null;typeof t.animation=="undefined"?this.animation={effect:"fade",duration:250}:this.animation=t.animation,t.marker?(r=t.marker.lonlat,i=t.marker.icon):r=t.lonlat,n.prototype.initialize.apply(this,[t.id,r,t.contentSize,t.contentHTML,i,!1]),this.groupDiv.className="olPopupInner";var s=this.addDiv("olPopupWrapper",this.groupDiv),o=this.addDiv("olPopupSide",s);s.appendChild(this.contentDiv);var u=this.addDiv("olPopupBottom",this.div),a=this.addDiv("",u),f=this.addDiv("olPopupArrow",this.div);e.css(this.div,"overflow","visible"),e.css(this.groupDiv,"overflow","visible"),t.contentSize||(e.css(this.div,"width",""),e.css(this.div,"height",""),e.css(this.contentDiv,"width",""),e.css(this.contentDiv,"height",""))},addDiv:function(e,t){var n=document.createElement("div");return n.className=e,t.appendChild(n),n},setBackgroundColor:function(){},setBorder:function(){},updateSize:function(){},setSize:function(){},setOpacity:function(e){if(e>=1||e==null){this.div.style.filter="";return}n.prototype.setOpacity.apply(this,arguments)},moveTo:function(){var t=e.query(".olPopupBottom",this.div);this.div.offsetWidth>0&&t.css("width",this.div.offsetWidth+"px"),this.size=new OpenLayers.Size(this.div.offsetWidth,this.div.offsetHeight),n.prototype.moveTo.apply(this,arguments);if(this.marker){var r=parseInt(e.css(this.div,"left")),i=parseInt(e.css(this.div,"top")),s=this.marker.icon.imageDiv.offsetWidth,o=this.marker.icon.imageDiv.offsetHeight;this.marker.icon.offset&&(this.relativePosition=="tr"||this.relativePosition=="br"?e.css(this.div,"left",r-(s-Math.abs(this.marker.icon.offset.x))+"px"):e.css(this.div,"left",r+Math.abs(this.marker.icon.offset.x)+"px"),(this.relativePosition=="br"||this.relativePosition=="bl")&&e.css(this.div,"top",i-(o-Math.abs(this.marker.icon.offset.y))))}},updateRelativePosition:function(){e.attr(this.div,"class","olPopup"),e.addClass(this.div,"olPopup-"+this.relativePosition)},show:function(e){n.prototype.show.apply(this,arguments),this.marker&&(this.lonlat=this.marker.lonlat),this.updatePosition(),this.animation&&this.animation.effect&&(new tomtom.Animation(this.div,this.animation.effect+"In",{duration:this.animation.duration,callback:e})).play()},hide:function(e){this.div&&(this.animation&&this.animation.effect?(new tomtom.Animation(this.div,this.animation.effect+"Out",{callback:t.hitch(this,function(){this.div&&(n.prototype.hide.apply(this,[]),this.events.triggerEvent("hide")),typeof e=="function"&&e()}),duration:this.animation.duration})).play():(n.prototype.hide.apply(this,arguments),this.events.triggerEvent("hide")))},destroy:function(){this.id=null,this.lonlat=null,this.size=null,this.contentHTML=null,this.backgroundColor=null,this.opacity=null,this.border=null,this.closeOnMove&&this.map&&this.map.events.unregister("movestart",this,this.hide),this.events&&this.events.destroy(),this.events=null,this.closeDiv&&(OpenLayers.Event.stopObservingElement(this.closeDiv),this.groupDiv.removeChild(this.closeDiv)),this.closeDiv=null,this.div&&this.groupDiv&&this.div.removeChild(this.groupDiv),this.groupDiv=null,this.map!=null&&this.map.removePopup(this),this.map=null,this.div=null,this.autoSize=null,this.minSize=null,this.maxSize=null,this.padding=null,this.panMapIfOutOfView=null}}),tomtom.Popup}),tomtom.define("i18n",["./Utils","./Main","./OpenLayers"],function(e){function l(e,t){if(e&&e.indexOf(".")>-1){var n=e.split("."),r=n.length-1;for(var i=0;i<r&&t;i++)t=t[n[i]];return e=n[i],t&&t[e]||undefined}return t[e]}var t=/{([\w_]+)}/g,n=/^([a-z]{2})([-_])([a-z]{2})/i,r=/;; ?/,i=null,s={},o=null,u="en_US",a={_rules:[[1,function(e){return 0}],[2,function(e){return e!=1?1:0}],[2,function(e){return e>1?1:0}],[3,function(e){return e%10==1&&e%100!=11?1:e!=0?2:0}],[4,function(e){return e==1||e==11?0:e==2||e==12?1:e>0&&e<20?2:3}],[3,function(e){return e==1?0:e==0||e%100>0&&e%100<20?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?2:1}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==1?0:e>=2&&e<=4?1:2}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[4,function(e){return e%100==1?0:e%100==2?1:e%100==3||e%100==4?2:3}],[5,function(e){return e==1?0:e==2?1:e>=3&&e<=6?2:e>=7&&e<=10?3:4}],[6,function(e){return e==0?5:e==1?0:e==2?1:e%100>=3&&e%100<=10?2:e%100>=11&&e%100<=99?3:4}],[4,function(e){return e==1?0:e==0||e%100>0&&e%100<=10?1:e%100>10&&e%100<20?2:3}],[3,function(e){return e%10==1?0:e%10==2?1:2}],[2,function(e){return e%10==1&&e%100!=11?0:1}]],_languages:{"hu-HU":0,"id-ID":0,"ms-MY":0,"th-TH":0,"tr-TR":0,"zh-CN":0,"zh-TW":0,de:1,en:1,es:1,it:1,nl:1,pt:1,"af-ZA":1,"ca-ES":1,"da-DK":1,"de-DE":1,"en-GB":1,"en-US":1,"es-ES":1,"es-MX":1,"it-IT":1,"nl-BE":1,"nl-NL":1,"no-NO":1,"pt-BR":1,"pt-PT":1,"sv-SE":1,"et-EE":1,"fi-FI":1,"bg-BG":1,"el-GR":1,fr:2,"fr-CA":2,"fr-FR":2,"lv-LV":3,"lt-LT":6,"hr-HR":7,"ru-RU":7,"cs-CZ":8,"sk-SK":8,"pl-PL":9,"sl-SI":10},getPluralForm:function(e){var t=a._rules,i;if(isNaN(e)&&"string"==typeof e)if(e in a._languages)i=a._languages[e];else{var s=e.match(n);i=s&&a._languages[s[1]]}else i=Number(e);if(i==null||isNaN(i)||i<0||i>t.length)i=0;var o=t[i][1];return function(e,t){if("string"!=typeof e)return;t=isNaN(t)?1:t<0?0:t;var n=o(t),i=e?e.split(r):[""],s=n<i.length?i[n]:i[i.length-1];return s}}},f={_locale:"",getLocale:function(){return this._locale},setLocale:function(e){this._locale=e,o=a.getPluralForm(this._locale),i=tomtom.languages[this._locale]},getCountryCode:function(){var e=this._locale.match(n);return e&&e[3]||null},getPrimaryLanguage:function(){return this._locale.substr(0,2)},hasLocalizedStrings:function(){return"object"==typeof i&&i!=null},setLocaleRule:function(t,n,r){var i=t=="*",o=e.isArray(t),u=this._locale==t||o&&t.indexOf(this._locale)>-1;if(!i&&!u){var a=this.getCountryCode(),f=a==t||o&&t.indexOf(a)>-1;if(!f)return}"function"==typeof r&&(s[n]=e.hitch(new c(n),r))}},c=OpenLayers.Class({initialize:function h(e,t){var n={},r,s;t&&(s=t._branch,this._pathKey=t._pathKey?t._pathKey+"."+e:e),s=s||i||h._branch||n,r=s==n?n:l(e,s),this._branch="object"==typeof r?r:null}});c._branch=null,c._pathKey="",c._pluralFormRule=null,c.getBranch=function(e){return new c(e,this)},c.getString=function(e,n,r){var u=this._branch||i||{},a=l(e,u),f=(this._pathKey?this._pathKey+".":"")+e,c=s[f];if(c)return c(n,r);var h=this._pluralFormRule||o;return h&&(a=h(a,r)),"string"==typeof a?(n&&(a=a.replace(t,function(e,t){return t in n?n[t]:"#"+t+"#"})),a):"#"+e+"#"},c.prototype._pathKey=c._pathKey,c.prototype._branch=c._branch,c.prototype.getBranch=c.getBranch,c.prototype.getString=c.getString,f.setLocale(u),f.setLocaleRule("*","units.distance",function(e,t){var n=t/1e3;return t<500?t+" "+this.getString("meter",null,t):n.toFixed(1)+" "+this.getString("km",null,n)}),f.setLocaleRule(["en_GB","en_US"],"units.distance",function(e,t){var n=Math.round(t*.10936133)*10,r=n/1760;return r<.5?Math.round(n)+" "+this.getString("yard",null,n):r.toFixed(1)+" "+this.getString("mile",null,r)}),f.setLocaleRule("*","common.TomTom.HDTraffic",function(){return"HD Traffic"}),tomtom.LocaleManager=f,tomtom.StringBundle=c,tomtom.PluralForm=a}),tomtom.define("TrafficIncidentPopup",["./Popup","./DomUtil","./Utils","./i18n"],function(e,t,n){tomtom.TrafficIncidentPopup=OpenLayers.Class(e,{initialize:function(n,i){var s=OpenLayers.ImgPath,o=new tomtom.StringBundle("IncidentItem"),u=t.mixin({r:"",dl:"--",l:"--",d:"",f:"--",t:"--",icon:"url("+s+"traffic-icons/"+i.getCategoryString(n.ic)+"-"+i.getTypeString(n.ty)+".png)",labelDelay:o.getString("delay"),labelLength:o.getString("length"),labelFrom:o.getString("from"),labelTo:o.getString("to")},n);u.dl&&!isNaN(u.dl)&&(u.dl=Math.round(u.dl/60),u.dl+=" "+tomtom.StringBundle.getString("units.time.minute",null,u.dl)),u.l&&!isNaN(u.l)&&(u.l=tomtom.StringBundle.getString("units.distance",null,u.l));var a=OpenLayers.String.format(r,u);e.prototype.initialize.apply(this,[{id:"traffic_popup_"+n.id,marker:i,contentSize:new OpenLayers.Size(325,150),contentHTML:a}])}});var r='<div class="trafficInfo"><div class="header"><div style="background-image: ${icon}" class="icon"></div><div class="road">${r}</div><div class="delay"><label>${labelDelay}:</label>${dl}</div><div class="length"><label>${labelLength}:</label>${l}</div></div><div class="body"><div class="description">${d}</div><div class="location"><div class="line"><label>${labelFrom}:</label><div>${f}</div></div><div class="line"><label>${labelTo}:</label><div>${t}</div></div></div></div></div>';return tomtom.TrafficIncidentPopup}),tomtom.define("TrafficClusterPopup",["./Popup","./DomUtil","./Utils","./TrafficIncidentPopup"],function(e,t,n){tomtom.TrafficClusterPopup=OpenLayers.Class(e,{initialize:function(n,o){this.incident=n,this.marker=o;var u=OpenLayers.ImgPath,a=0,f="",l=new tomtom.StringBundle("IncidentBalloon.Cluster"),c=this.pois=n.cpoi.sort(function(e,t){return e.dl>t.dl?-1:e.dl==t.dl?0:1});for(var h=0;h<c.length&&h<4;h++){var p=c[h],d="";p.f&&p.f.length>s&&(p.f=p.f.substring(0,s)+"..."),p.t&&p.t.length>s&&(p.t=p.t.substring(0,s)+"..."),h+1==c.length&&(d="last");var v=t.mixin({r:"",dl:"--",l:"--",d:"",f:"--",t:"--",index:h,className:d,icon:"url("+u+"traffic-icons/"+o.getCategoryString(p.ic)+"-"+o.getTypeString(p.ty)+".png)"},p);v.dl&&!isNaN(v.dl)&&(v.dl=Math.round(v.dl/60),v.dl+=" "+tomtom.StringBundle.getString("units.time.minute",null,v.dl)),v.l&&!isNaN(v.l)&&(v.l=tomtom.StringBundle.getString("units.distance",null,v.l)),f+=OpenLayers.String.format(i,v),a++}var m=OpenLayers.String.format(r,{incidentCount:n.cs,labelIncidents:l.getString("title"),mostSevereIncidents:l.getString("listHeader",{count:a},a),orderedBy:l.getString("orderedByDelay"),incidents:f});e.prototype.initialize.apply(this,[{id:"traffic_popup_"+n.id,marker:o,contentSize:new OpenLayers.Size(325,225),contentHTML:m}])},setMap:function(e){this._rowClickHandle&&t.unbind(this._rowClickHandle);var n=this;this._rowClickHandle=t.query("tr",this.div).bind("click",function(r){var i=parseInt(t.attr(this,"data-poi-index")),s=null;isNaN(i)||(s=n.pois[i]);if(s){var o=new tomtom.TrafficIncidentPopup(s,n.marker);e.addPopup(o,!0),o.show()}OpenLayers.Event.stop(r)})},destroy:function(){this._rowClickHandle&&t.unbind(this._rowClickHandle),e.prototype.destroy.apply(this,arguments)}});var r='<div class="trafficInfo trafficInfo-cluster"><div class="header">${labelIncidents} ${incidentCount}</div><h3>${mostSevereIncidents} <span>${orderedBy}</span></h3><table>${incidents}</table></div>',i='<tr class="${className}" data-poi-index="${index}"><td><div class="icon" style="background-image: ${icon}"></div></td><td class="location"><div class="from">${f}</div><div class="to">${t}</div></td><td class="delay">${dl}</td><td class="length">${l}</td>',s=18;return tomtom.TrafficClusterPopup}),tomtom.define("TrafficMarker",["./CustomMarker","./DomUtil","./Popup","./TrafficIncidentPopup","./TrafficClusterPopup"],function(e,t,n){return tomtom.TrafficMarker=OpenLayers.Class(e,{initialize:function(n,r,i){this.incidentType=this.getTypeString(i.ty),this.iconCategory=this.getCategoryString(i.ic),this.clusterSize=i.cs,this._mouseOverHandle=null,this._mouseOutHandle=null,this._markerClickHandle=null,this.data=i,this.clusterSize&&this.iconCategory!="region"&&(this.iconCategory="cluster"),e.prototype.initialize.apply(this,[n,r,"trafficIcon"]),this.configureIcon(),this._markerClickHandle=t.bind(this.icon.imageDiv,"click",this._markerClick,this)},configureIcon:function(){var e=this.iconCategory,n=this.incidentType,r=this.icon.imageDiv;this.icon.size=new OpenLayers.Size(0,0),this.setBackgroundImage("traffic-icons/"+e+"-"+n+".png");if(e=="cluster"||e=="region")t.addClass(this.icon.imageDiv,"trafficIcon-cluster"),this.icon.imageDiv.innerHTML=this.clusterSize,e=="region"&&t.addClass(this.icon.imageDiv,"trafficIcon-region");this._mouseOverHandle=t.bind(this.icon.imageDiv,"mouseover",this._mouseOver,this),this._mouseOutHandle=t.bind(this.icon.imageDiv,"mouseout",this._mouseOut,this)},setBackgroundImage:function(e){t.css(this.icon.imageDiv,"backgroundImage",'url("'+OpenLayers.ImgPath+e+'")')},getTypeString:function(e){switch(e){case 1:return"minor";case 2:return"moderate";case 3:return"major";default:return"unknown"}},getCategoryString:function(e){switch(e){case 1:return"accdnt";case 2:case 3:case 4:case 5:case 10:case 11:case 12:return"block";case 7:case 8:return"closed";case 9:return"rworks";case 13:return"cluster";case 999:return"region";default:return"traffic"}},erase:function(){t.unbind(this._mouseOverHandle),t.unbind(this._mouseOutHandle),t.unbind(this._markerClickHandle),e.prototype.erase.apply(this,arguments)},_mouseOut:function(){t.removeClass(this.icon.imageDiv,"trafficIcon-hover")},_mouseOver:function(){t.addClass(this.icon.imageDiv,"trafficIcon-hover")},_markerClick:function(e){var t=null;this.iconCategory=="cluster"||this.iconCategory=="region"?t=new tomtom.TrafficClusterPopup(this.data,this):t=new tomtom.TrafficIncidentPopup(this.data,this),this.map.addPopup(t,!0),t.show(),OpenLayers.Event.stop(e)},_showClusterPopup:function(){}}),tomtom.TrafficMarker}),tomtom.define("controls/OverviewMap",["../DomUtil","../Utils","../OpenLayers"],function(e,t){var n=OpenLayers.Control.OverviewMap;return tomtom.controls.OverviewMap=OpenLayers.Class(n,{minimizedSize:32,initialize:function(e){this._eventHandlers=[],n.prototype.initialize.apply(this,arguments)},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments),this.div.className="olControlOverviewMapContainer";if(this.layers.length===0){if(!this.map.baseLayer)return this.map.events.register("changebaselayer",this,this.baseLayerDraw),this.div;var t=this.map.baseLayer.clone();this.layers=[t]}return this.element=document.createElement("div"),this.element.className=this.displayClass+"Element",this.element.style.display="none",this.mapDiv=document.createElement("div"),this.mapDiv.style.width=this.size.w+"px",this.mapDiv.style.height=this.size.h+"px",this.mapDiv.style.position="relative",this.mapDiv.style.overflow="hidden",this.mapDiv.id=OpenLayers.Util.createUniqueID("overviewMap"),this.extentRectangle=document.createElement("div"),this.extentRectangle.style.position="absolute",this.extentRectangle.style.zIndex=1e3,this.extentRectangle.className=this.displayClass+"ExtentRectangle",this.element.appendChild(this.mapDiv),this.div.appendChild(this.element),this.minimizeDiv=null,this.maximizeDiv=null,this.buttonNode=document.createElement("div"),e.addClass(this.buttonNode,"button"),this.div.appendChild(this.buttonNode),this.buttonNode.appendChild(document.createElement("div")),this.maximized&&e.addClass(this.div,"olControlOverviewMapContainerMaximized"),this._eventHandlers.push(e.bind(this.buttonNode,"click",function(){this.maximized?this.minimizeControl():this.maximizeControl()},this)),this._eventHandlers.push(e.bind(window,"resize",function(){this.updatePosition(this.maximized)},this)),this.map.getExtent()&&this.update(),this.map.events.on({buttonclick:this.onButtonClick,moveend:this.update,scope:this}),this.maximized&&this.maximizeControl(),this.div},maximizeControl:function(){var n=this.div.parentNode;e.css(this.element,"display",""),e.addClass(this.div,"olControlOverviewMapContainerMaximized");if(n&&n.style){var r=e.dimensions(n);this.updatePosition(!1),e.animate(this.div,{properties:{top:r.height-(this.size.h+parseInt(e.css(this.div,"padding-top"))+parseInt(e.css(this.div,"padding-bottom"))),left:r.width-(this.size.w+parseInt(e.css(this.div,"padding-left"))+parseInt(e.css(this.div,"padding-right")))},duration:250,callback:t.hitch(this,function(){this.maximized=!0,this.updateOverview()})})}},minimizeControl:function(){var n=this.div.parentNode;e.css(this.element,"display","");if(n&&n.style){var r=e.dimensions(n);this.updatePosition(!0),e.animate(this.div,{properties:{top:r.height-this.minimizedSize,left:r.width-this.minimizedSize},duration:250,callback:t.hitch(this,function(){e.removeClass(this.div,"olControlOverviewMapContainerMaximized"),this.maximized=!1})})}},updatePosition:function(t){var n=this.div.parentNode;t?(e.css(this.div,"top",n.offsetHeight-(this.size.h+parseInt(e.css(this.div,"padding-top"))+parseInt(e.css(this.div,"padding-bottom")))),e.css(this.div,"left",n.offsetWidth-(this.size.w+parseInt(e.css(this.div,"padding-left"))+parseInt(e.css(this.div,"padding-right"))))):(e.css(this.div,"top",n.offsetHeight-this.minimizedSize),e.css(this.div,"left",n.offsetWidth-this.minimizedSize))},onButtonClick:function(){},createMap:function(){n.prototype.createMap.apply(this,arguments);var e=this.ovmap;e.isValidZoomLevel=function(e){return e<=17},e.adjustZoom=function(e){return e>17?17:e}}}),tomtom.controls.OverviewMap}),tomtom.define("controls/PanZoomBar",["../DomUtil"],function(e){var t=OpenLayers.Control.PanZoom;return tomtom.controls.PanZoomBar=OpenLayers.Class(t,{autoActivate:!0,zoomStopWidth:18,zoomStopHeight:8,slider:null,sliderEvents:null,zoombarDiv:null,zoomWorldIcon:!1,panIcons:!0,forceFixedZoomLevel:!1,mouseDragStart:null,deltaY:null,zoomStart:null,destroy:function(){this._removeZoomBar(),this.map.events.un({changebaselayer:this.redraw,scope:this}),OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments),delete this.mouseDragStart,delete this.zoomStart},setMap:function(e){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments),this.map.events.register("changebaselayer",this,this.redraw)},redraw:function(){this.div!=null&&(this.removeButtons(),this._removeZoomBar()),this.draw()},draw:function(t){OpenLayers.Control.prototype.draw.apply(this,arguments),t=this.position.clone();var n=document.createElement("div");return n.className="olPanContainer",e.append(this.div,n),this.buttons=[],this.panIcons&&(this._addButton("PanUp",n),this._addButton("PanLeft",n),this.zoomWorldIcon&&this._addButton("ZoomWorld"),this._addButton("PanRight",n),this._addButton("PanDown",n)),this._addButton("ZoomIn"),this._addZoomBar(),this._addButton("ZoomOut"),this.div},_addButton:function(t,n){var r=document.createElement("a");r.className="ol"+t+" olButton",r.href="javascript:void(0);",r.action=t.toLowerCase(),n||(n=this.div),e.append(n,r),this.buttons.push(r)},_addZoomBar:function(){var t=this.map.getNumZoomLevels()-1-this.map.getZoom(),n=this.slider=document.createElement("div");n.className="olZoomBarHandle",e.css(n,"top",0),this.sliderEvents=new OpenLayers.Events(this,n,null,!0,{includeXY:!0}),this.sliderEvents.on({touchstart:this.zoomBarDown,touchmove:this.zoomBarDrag,touchend:this.zoomBarUp,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp});var r=document.createElement("div");r.className="olZoomBar",this.zoombarDiv=r,this.div.appendChild(r),this.startTop=-this.zoomStopHeight,r.appendChild(n),this.map.events.register("zoomend",this,this.moveZoomBar)},activate:function(){this.moveZoomBar()},_removeZoomBar:function(){this.sliderEvents.un({touchstart:this.zoomBarDown,touchmove:this.zoomBarDrag,touchend:this.zoomBarUp,mousedown:this.zoomBarDown,mousemove:this.zoomBarDrag,mouseup:this.zoomBarUp}),this.sliderEvents.destroy(),this.div.removeChild(this.zoombarDiv),this.zoombarDiv=null,this.div.removeChild(this.slider),this.slider=null,this.map.events.unregister("zoomend",this,this.moveZoomBar)},onButtonClick:function(e){OpenLayers.Control.PanZoom.prototype.onButtonClick.apply(this,arguments);if(e.buttonElement===this.zoombarDiv){var t=e.buttonXY.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom)t=Math.floor(t);var n=this.map.getNumZoomLevels()-1-t;n=Math.min(Math.max(n,0),this.map.getNumZoomLevels()-1),this.map.zoomTo(n)}},passEventToSlider:function(e){this.sliderEvents.handleBrowserEvent(e)},zoomBarDown:function(e){if(!OpenLayers.Event.isLeftClick(e)&&!OpenLayers.Event.isSingleTouch(e))return;this.map.events.on({touchmove:this.passEventToSlider,mousemove:this.passEventToSlider,mouseup:this.passEventToSlider,scope:this}),this.mouseDragStart=e.xy.clone(),this.zoomStart=e.xy.clone(),this.div.style.cursor="move",this.zoombarDiv.offsets=null,OpenLayers.Event.stop(e)},zoomBarDrag:function(t){if(this.mouseDragStart!=null){var n=this.mouseDragStart.y-t.xy.y,r=OpenLayers.Util.pagePosition(this.zoombarDiv),i=e.dimensions(this.zoombarDiv),s=e.dimensions(this.slider);if(t.clientY-r[1]>0&&t.clientY-r[1]<i.height){var o=parseInt(this.slider.style.top)-n;this.slider.style.top=o+"px",this.mouseDragStart=t.xy.clone()}this.updateZoom(),this.deltaY=this.zoomStart.y-t.xy.y,OpenLayers.Event.stop(t)}},zoomBarUp:function(e){if(!OpenLayers.Event.isLeftClick(e)&&e.type!=="touchend")return;this.mouseDragStart&&(this.div.style.cursor="",this.map.events.un({touchmove:this.passEventToSlider,mouseup:this.passEventToSlider,mousemove:this.passEventToSlider,scope:this}),this.mouseDragStart=null,this.zoomStart=null,this.deltaY=0,this.moveZoomBar(),OpenLayers.Event.stop(e))},updateZoom:function(){var e=this.getZoomLevel(parseInt(this.slider.style.top));this.map.zoomTo(e)},getZoomLevel:function(e){var t=0;return t=e/this.zoomStopHeight-1,t=Math.max(Math.round(t),0),Math.abs(t-(this.map.getNumZoomLevels()-2))},moveZoomBar:function(){if(!this.mouseDragStart){var e=(this.map.getNumZoomLevels()-1-this.map.getZoom())*this.zoomStopHeight+this.startTop;this.slider.style.top=e+"px"}},CLASS_NAME:"OpenLayers.Control.PanZoomBar"}),tomtom.controls.PanZoomBar}),tomtom.define("layers/MarkerLayer",["../Main","../OpenLayers"],function(){var e=OpenLayers.Layer.Markers;return tomtom.layers.MarkerLayer=OpenLayers.Class(e,{initialize:function(){e.prototype.initialize.apply(this,arguments)},addMarker:function(t,n){typeof n=="undefined"&&(n=!0),n&&t.lonlat.transform(this.projection,this.map.getProjectionObject()),t.setMap&&t.setMap(this.map),e.prototype.addMarker.apply(this,arguments)}}),tomtom.layers.MarkerLayer}),tomtom.define("layers/MapLayer",["../OpenLayers","../Main","../Utils"],function(e,t,n){return tomtom.layers.MapLayer=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"TomTom",type:null,wrapDateLine:!0,url:"lbs/map/3/basic/1/${z}/${x}/${y}.png?",tilesVersion:"0",initialize:function(e,t){t=OpenLayers.Util.applyDefaults({sphericalMercator:!0,apiKey:e,transitionEffect:"resize"},t);var n=[this.name,null,t];OpenLayers.Layer.XYZ.prototype.initialize.apply(this,n)},getURL:function(e){var t=this.getXYZ(e),r=OpenLayers.String.format(this.url,{x:t.x,y:t.y,z:t.z});return this.apiKey&&(r+="key="+this.apiKey),n.getServiceUrl(r,null,!0,!1)},clone:function(e){return e==null&&(e=new tomtom.layers.MapLayer(this.apikey,this.getOptions())),e=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[e]),e},CLASS_NAME:"tomtom.layers.MapLayer"}),tomtom.layers.MapLayer}),tomtom.define("layers/TrafficLayer",["../DomUtil","../Utils","../OpenLayers","../Main"],function(e,t){var n=OpenLayers.Layer.XYZ;tomtom.layers.TrafficLayer=OpenLayers.Class(n,{url:"lbs/map/3/traffic/s2/${z}/${x}/${y}.png?v=${tilesVersion}&l=${language}&t=${t}",name:"TomTom-Traffic",language:"en",tilesVersion:"0",isBaseLayer:!1,initialize:function(e,t,n){n=OpenLayers.Util.applyDefaults({sphericalMercator:!0,apiKey:e},n);var r=[this.name,null,n];this.trafficModel=t,OpenLayers.Layer.XYZ.prototype.initialize.apply(this,r),this._updating=!1},getURL:function(e){var n=this.getXYZ(e),r=OpenLayers.String.format(this.url,{x:n.x,y:n.y,z:n.z,language:this.language,tilesVersion:this.tilesVersion,t:this.trafficModel});return this.apiKey&&(r+="&key="+this.apiKey),t.getServiceUrl(r,null,!0,!1)},clone:function(e){return e==null&&(e=new tomtom.layers.TrafficLayer(this.apikey,this.getOptions())),e=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[e]),e},update:function(e){this.trafficModel!=e&&(this.trafficModel=e,this.redraw(!0))},CLASS_NAME:"tomtom.layers.TrafficLayer"});var r=250;return tomtom.layers.TrafficLayer}),tomtom.define("layers/TrafficIncidentLayer",["./MarkerLayer","../Utils","../TrafficMarker"],function(e,t,n){return tomtom.layers.TrafficIncidentLayer=OpenLayers.Class(e,{initialize:function(t,n,r){this.apiKey=n,this.trafficModel=r,e.prototype.initialize.apply(this,[t]),this._trafficMarkers=new tomtom.MarkerManager({layer:this,animation:{effect:"fade",delay:0,duration:500},projection:new OpenLayers.Projection("EPSG:900913")})},update:function(e,n){this.trafficModel=n,typeof e=="undefined"&&(e=!0);var r=this.map.getZoom(),i=this._trafficMarkers,s=new tomtom.services.TrafficService(this.apiKey);r>=7?s.getTrafficModel(this.getExtent(),r,{projection:"EPSG900913",trafficModelID:this.trafficModel},t.hitch(this,function(n){if(n.tm&&n.tm.poi){var r=n.tm.poi;i.clearMarkers();if(t.isArray(r))for(var s=0;s<r.length;s++)this._addMarker(r[s]);else this._addMarker(r);i.update(e),this.incidents=r,this.map.events.triggerEvent("trafficupdate",{incidents:r})}})):(i.clearMarkers(),i.update())},removeMap:function(){this._trafficMarkers.destroy(),e.prototype.removeMap.apply(this,arguments)},_addMarker:function(e){var t=new OpenLayers.LonLat(e.p.x,e.p.y),r=new n(t.lon,t.lat,e);this._trafficMarkers.addMarker(r,e.id)}}),tomtom.layers.TrafficIncidentLayer}),tomtom.define("services/BaseService",["../BaseObject"],function(e){return tomtom.services.BaseService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,[]),t?this.apiKey=t:this.apiKey=tomtom.apiKey,!this.apiKey&&!tomtom.proxyUrl&&this.log.warn('An API Key has not been specified.  TomTom services will not work without an API Key. Please specify an API key either via tomtom.apiKey OR by passing the apiKey to the service\'s constructor: var service = new tomtom.services.GeocodeService("your key here");')}}),tomtom.services.BaseService}),tomtom.define("services/TrafficService",["./BaseService","../DomUtil","../Utils","../OpenLayers","../i18n"],function(e,t,n){tomtom.services.TrafficService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getTrafficModel:function(e,i,s,o,u){typeof s=="function"&&(u=o,o=s,s={}),s.projection||(s.projection="EPSG4326");var a=t.mixin({},s);s.trafficModelID||(s.trafficModelID=-1),a.trafficModelID&&delete a.trafficModelID,a.language||(a.language=tomtom.LocaleManager.getPrimaryLanguage()),s.zoom=i,e=new OpenLayers.Bounds(e.left,e.bottom,e.right,e.top),s.minY=e.top,s.minX=e.left,s.maxY=e.bottom,s.maxX=e.right,this.apiKey&&(a.key=this.apiKey),a.expandCluster=!0,tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,s),a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",s),a),callback:o,callbackParam:"jsonp",errorCallback:u})}});var r="lbs/services/trafficIcons/3/s2/${minY},${minX},${maxY},${maxX}/${zoom}/${trafficModelID}/json";return tomtom.services.TrafficService}),tomtom.define("services/ViewportService",["./BaseService","../DomUtil","../Utils"],function(e,t,n){tomtom.services.ViewportService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getViewportModel:function(e,i,s,o,u,a,f){typeof u=="function"&&(f=a,a=u,u={}),e=new OpenLayers.Bounds(e.left,e.bottom,e.right,e.top),e.transform(new OpenLayers.Projection(u.projection?u.projection:"EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),s=new OpenLayers.Bounds(s.left,s.bottom,s.right,s.top),s.transform(new OpenLayers.Projection(u.projection?u.projection:"EPSG:4326"),new OpenLayers.Projection("EPSG:900913"));var l={box:e.bottom+","+e.left+","+e.top+","+e.right,zoom:i,overviewBox:s.bottom+","+s.left+","+s.top+","+s.right,overviewZoom:o,copyright:typeof u.copyright=="undefined"?!0:u.copyright};this.apiKey&&(u.key=this.apiKey),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,l),u),callback:a,errorCallback:f}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",l),u),callback:a,callbackParam:"jsonp",errorCallback:f})}});var r="lbs/services/viewportDesc/3/${box}/${zoom}/${overviewBox}/${overviewZoom}/${copyright}/json";return tomtom.services.ViewportService}),tomtom.define("services/RoutingService",["./BaseService","../DomUtil","../Utils","../OpenLayers"],function(e,t,n){tomtom.services.RoutingService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getRoute:function(e,s,o,u){typeof s=="function"&&(u=o,o=s,s={}),this.apiKey&&(s.key=this.apiKey);var a=t.mixin({},s);a.routeType&&delete a.routeType,s.routeType||(s.routeType=i);var f=[];for(var l=0;l<e.length;l++){var c=e[l];f.push(c.lat+","+c.lon)}var h={points:f.join(":"),routeType:s.routeType};tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,h),a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",h),a),callback:o,callbackParam:"jsonp",errorCallback:u})}});var r="lbs/services/route/3/${points}/${routeType}/json",i="Quickest";return tomtom.services.RoutingService}),tomtom.define("services/GeocodingService",["./BaseService","../DomUtil","../Utils"],function(e,t,n){tomtom.services.GeocodingService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},geocode:function(e,i,s,o){typeof i=="function"&&(o=s,s=i,i={});var u={q:e};this.apiKey&&(u.key=this.apiKey),t.mixin(u,i),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(r,u),callback:s,errorCallback:o}):t.jsonp({url:n.getServiceUrl(r+"p",u),callback:s,callbackParam:"jsonp",errorCallback:o})},reverseGeocode:function(e,r,s,o,u){typeof s=="function"&&(u=o,o=s,s={});var a={point:r+","+e,projection:"EPSG4326"};t.mixin(a,s),this.apiKey&&(a.key=this.apiKey),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(i,a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(i+"p",a),callback:o,errorCallback:u,callbackParam:"jsonp"})}});var r="lbs/services/geocode/3/json",i="lbs/services/reverseGeocode/3/json";return tomtom.services.GeocodingService}),tomtom.define("services/InitializeService",["./BaseService","../DomUtil","../Utils"],function(e,t,n){tomtom.services.InitializeService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getCopyrightInfo:function(e,i,s){typeof e=="function"&&(s=i,i=e,e={}),this.apiKey&&(e.key=this.apiKey),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(r,e),callback:i,errorCallback:s}):t.jsonp({url:n.getServiceUrl(r+"p",e),callback:i,callbackParam:"jsonp",errorCallback:s})}});var r="lbs/services/initialize/3/json";return tomtom.services.InitializeService}),tomtom.define("Cluster",["./Main"],function(){return tomtom.Cluster=OpenLayers.Class({initialize:function(e){this.baseMarker=e,this.markers=[e]},add:function(e){this.markers.push(e)}}),tomtom.Cluster}),tomtom.define("ClusterMarker",["./CustomMarker"],function(e){return tomtom.ClusterMarker=OpenLayers.Class(e,{initialize:function(t){this.cluster=t;var n=t.baseMarker.lonlat;e.prototype.initialize.apply(this,[n.lon,n.lat,"olMarkerCluster"]),this.update()},update:function(){this.icon.imageDiv.innerHTML=this.cluster.markers.length}}),tomtom.ClusterMarker}),tomtom.define("text",["module"],function(e){var t=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],n=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,r=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,i=typeof location!="undefined"&&location.href,s=i&&location.protocol&&location.protocol.replace(/\:/,""),o=i&&location.hostname,u=i&&(location.port||undefined),a=[],f=e.config&&e.config()||{},l,c;return l={version:"2.0.1",strip:function(e){if(e){e=e.replace(n,"");var t=e.match(r);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:f.createXhr||function(){var e,n,r;if(typeof XMLHttpRequest!="undefined")return new XMLHttpRequest;if(typeof ActiveXObject!="undefined")for(n=0;n<3;n+=1){r=t[n];try{e=new ActiveXObject(r)}catch(i){}if(e){t=[r];break}}return e},parseName:function(e){var t=!1,n=e.indexOf("."),r=e.substring(0,n),i=e.substring(n+1,e.length);return n=i.indexOf("!"),n!==-1&&(t=i.substring(n+1,i.length),t=t==="strip",i=i.substring(0,n)),{moduleName:r,ext:i,strip:t}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,t,n,r){var i=l.xdRegExp.exec(e),s,o,u;return i?(s=i[2],o=i[3],o=o.split(":"),u=o[1],o=o[0],(!s||s===t)&&(!o||o.toLowerCase()===n.toLowerCase())&&(!u&&!o||u===r)):!0},finishLoad:function(e,t,n,r){n=t?l.strip(n):n,f.isBuild&&(a[e]=n),r(n)},load:function(e,t,n,r){if(r.isBuild&&!r.inlineText){n();return}f.isBuild=r.isBuild;var a=l.parseName(e),c=a.moduleName+"."+a.ext,h=t.toUrl(c),p=f.useXhr||l.useXhr;!i||p(h,s,o,u)?l.get(h,function(t){l.finishLoad(e,a.strip,t,n)},function(e){n.error&&n.error(e)}):t([c],function(e){l.finishLoad(a.moduleName+"."+a.ext,a.strip,e,n)})},write:function(e,t,n,r){if(a.hasOwnProperty(t)){var i=l.jsEscape(a[t]);n.asModule(e+"!"+t,"tomtom.define(function () { return '"+i+"';});\n")}},writeFile:function(e,t,n,r,i){var s=l.parseName(t),o=s.moduleName+"."+s.ext,u=n.toUrl(s.moduleName+"."+s.ext)+".js";l.load(o,n,function(t){var n=function(e){return r(u,e)};n.asModule=function(e,t){return r.asModule(e,u,t)},l.write(e,o,n,i)},i)}},typeof process!="undefined"&&process.versions&&!!process.versions.node?(c=require.nodeRequire("fs"),l.get=function(e,t){var n=c.readFileSync(e,"utf8");n.indexOf("﻿")===0&&(n=n.substring(1)),t(n)}):l.createXhr()?l.get=function(e,t,n){var r=l.createXhr();r.open("GET",e,!0),f.onXhr&&f.onXhr(r,e),r.onreadystatechange=function(i){var s,o;r.readyState===4&&(s=r.status,s>399&&s<600?(o=new Error(e+" HTTP status: "+s),o.xhr=r,n(o)):t(r.responseText))},r.send(null)}:typeof Packages!="undefined"&&(l.get=function(e,t){var n="utf-8",r=new java.io.File(e),i=java.lang.System.getProperty("line.separator"),s=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(r),n)),o,u,a="";try{o=new java.lang.StringBuffer,u=s.readLine(),u&&u.length()&&u.charAt(0)===65279&&(u=u.substring(1)),o.append(u);while((u=s.readLine())!==null)o.append(i),o.append(u);a=String(o.toString())}finally{s.close()}t(a)}),l}),tomtom.define("text!templates/ClusterPopupItem.html",[],function(){return'<div class="clusterItem" data-markerIndex="${markerIndex}">\n	<div class="icon" style="background-image: ${background}"></div>\n	<div class="description">\n		${description}\n	</div>\n</div>'}),tomtom.define("ClusterPopup",["./Popup","text!templates/ClusterPopupItem.html","./DomUtil","./OpenLayers"],function(e,t,n){return tomtom.ClusterPopup=OpenLayers.Class(e,{initialize:function(n){this._eventHandles=[];var r='<div class="cluster">',i=n.cluster;this.cluster=n.cluster;for(var s=0;s<i.markers.length;s++){var o=i.markers[s],u=o.icon.url,a="url("+u+");";r+=OpenLayers.String.format(t,{background:a,description:o.getData()?o.getData().description:"",markerIndex:s})}e.prototype.initialize.apply(this,[OpenLayers.Util.applyDefaults({contentHTML:r+"</div>",marker:i.marker},n)])},show:function(){var t=this;this._eventHandles.push(n.query(".clusterItem",this.div).bind("click",function(){var e=t.cluster.markers[n.attr(this,"data-markerIndex")];if(e&&e.popup){var r=e.popupOptions,i=t.cluster.marker.map;r.marker=t.cluster.marker;var s=new e.popupClass(r);i.addPopup(s,!0),s.show(),s.events.register("hide",this,function(){s.destroy()}),this.currentPopup=s}})),e.prototype.show.apply(this,arguments)},hide:function(){n.unbindAll(this._eventHandles),e.prototype.hide.apply(this,arguments)},destroy:function(){n.unbindAll(this._eventHandles),this.currentPopup&&this.currentPopup.div&&this.currentPopup.destroy(),e.prototype.destroy.apply(this,arguments)}}),tomtom.ClusterPopup}),tomtom.define("MarkerManager",["./BaseObject","./Logger","./OpenLayers","./Main","./Cluster","./ClusterMarker","./ClusterPopup"],function(e){var t=new tomtom.Logger;tomtom.MarkerManager=OpenLayers.Class(e,{initialize:function(e){OpenLayers.Util.applyDefaults(this,e),this.markers=[],this.removedMarkers=[],this.clusters=[],this.markerMap={},this.animationTimeouts=[],this._completedAnimations=0,this._isMoveEndRegistered=!1,this.previousMarkerIds={},this.projection||(this.projection=new OpenLayers.Projection("EPSG:4326")),this.animation&&typeof this.animation!="object"&&(this.animation={effect:"fade",duration:n,delay:r}),this.clustering&&typeof this.clustering!="object"&&(this.clustering={}),this.clustering&&!this.clustering.distance&&(this.clustering.distance=i)},getMap:function(){return this.map?this.map:this.layer.map},addMarker:function(e,t){var n=this.getMap(),r=n.getProjectionObject();e.map=n,this.markers.push(e),e.lonlat.transform(this.projection,r),t&&(e.id=t,this.markerMap[t]=e)},getMarkerById:function(e){var t=this.markerMap[e];return t?t:null},clearMarkers:function(){this.previousMarkerIds={},this.removedMarkers=this.markers;for(var e in this.markerMap)this.previousMarkerIds[e]=!0;this.markers=[],this.markerMap={}},removeMarker:function(e){e.id&&delete this.markerMap[e.id];var t=this._getMarkerIndex(e);t>=0&&(this.removedMarkers.push(e),this.markers.splice(t,1))},update:function(e){typeof e=="undefined"&&(e=!0);var t=this.getMap(),n=this.getLayer();this._isMoveEndRegistered||(this._isMoveEndRegistered=!0,t.events.register("moveend",this,this._mapMoveEnd)),this._updateLayer(n,e),this.removedMarkers=[]},animateMarker:function(e,t,i,s){if(this.animation&&this.animation.effect){var o="",u={delay:t*(this.animation.delay!=null?this.animation.delay:r),duration:this.animation.duration?this.animation.duration:n,callback:s};i&&(o=i=="show"?"In":"Out"),e.animate(this.animation.effect+o,u)}},getLayer:function(){return this.layer?this.layer:this.map.getLayerByName(tomtom.Map.MARKER_LAYER_DEFAULT)},destroy:function(){var e=this.getMap(),t=this.getLayer();for(var n=0;n<this.markers.length;n++){var r=this.markers[n];t.removeMarker(r),r.destroy()}e.events.unregister("moveend",this,this._mapMoveEnd),this._destroyClusters(this.layer?this.layer:this.map.getLayerByName(tomtom.Map.MARKER_LAYER_DEFAULT))},_getMarkerIndex:function(e){for(var t=0;t<this.markers.length;t++)if(this.markers[t]==e)return t;return null},_updateLayer:function(e,n){var r=this.map?this.map.getExtent():this.layer.map.getExtent(),i=new Date,s=this.markers;this.clustering&&this._updateClusters(e,r,n);for(var o=0;o<s.length;o++){var u=this.markers[o];!u.isDrawn()&&!u.cluster&&r.containsLonLat(u.lonlat)&&(e.addMarker(u,!1),n&&this.animation&&(!u.id||!this.previousMarkerIds[u.id])&&this.animateMarker(u,o,"show"))}for(var a=0;a<this.removedMarkers.length;a++){var u=this.removedMarkers[a];e.removeMarker(u),u.destroy()}t.debug("Updating markers took "+(new Date-i)+"ms")},_addToCluster:function(e,t){var n=e.cluster;n?n.markers.push(t):(n=new tomtom.Cluster(e),n.add(t),this.clusters.push(n),e.cluster=n,e.map=this.getMap(),t.map=this.getMap()),t.cluster=n},_updateClusters:function(e,t,n){this._destroyClusters(e);for(var r=0;r<this.markers.length;r++){var i=this.markers[r];if(t.containsLonLat(i.lonlat)&&!i.cluster)for(var s=0;s<this.markers.length;s++){var o=this.markers[s];if(r!=s&&!o.cluster&&t.containsLonLat(o.lonlat)){var u=this.map||this.layer.map,a=this.map.getPixelFromLonLat(i.lonlat),f=this.map.getPixelFromLonLat(o.lonlat),l=a.distanceTo(f);l<=this.clustering.distance&&(this._addToCluster(i,o),i.isDrawn()&&e.removeMarker(i),o.isDrawn()&&e.removeMarker(o))}}}for(var c=0;c<this.clusters.length;c++){var h=this.clusters[c],p=this.onCreateClusterMarker(h);h.marker=p,e.addMarker(p,!1),n&&this.animateMarker(p)}},_destroyClusters:function(e){for(var t=0;t<this.clusters.length;t++){var n=this.clusters[t];e.removeMarker(n.marker,!1);for(var r=0;r<n.markers.length;r++)n.markers[r].cluster=null;n.marker.destroy()}this.clusters=[]},_mapMoveEnd:function(){this.update()},onCreateClusterMarker:function(e){var t=new tomtom.ClusterMarker(e);return this.clustering.showPopup&&t.setPopup(tomtom.ClusterPopup,{cluster:e},"click"),t}});var n=250,r=0,i=75;return tomtom.MarkerManager}),tomtom.define("Map",["./Logger","./OpenLayers","./TrafficMarker","./Utils","./DomUtil","./controls/OverviewMap","./controls/PanZoomBar","./layers/MarkerLayer","./layers/MapLayer","./layers/TrafficLayer","./layers/TrafficIncidentLayer","./services/TrafficService","./services/ViewportService","./services/RoutingService","./services/GeocodingService","./services/InitializeService","./MarkerManager"],function(e,t,n,r,i,s){var o=OpenLayers.Map;tomtom.Map=OpenLayers.Class(o,{initialize:function(t){this.baseLayer=null,this.apiKey=null,this.layers=[],this._trafficLayer=null,this._defaultMarkerLayer=null,this._trafficIncidentLayer=null,this._trafficMarkers=null,this._trafficUpdateIntervalId=0,this._viewportUpdateTimeoutId=0,this._routeLayer=null,this._displayTraffic=!1,this._displayRouteId=0,this._currentRoute=null,this._copyrightInfo={},this._defaultRouteStyle={strokeColor:"#00CC00",strokeWidth:8,strokeOpacity:.6,strokeDashstyle:"solid",pointerEvents:"visiblePainted"},OpenLayers.IMAGE_RELOAD_ATTEMPTS=3,OpenLayers.Util.onImageLoadErrorColor="transparent",t.apiKey?this.apiKey=t.apiKey:this.apiKey=tomtom.apiKey,t.cookie&&(typeof t.cookie!="object"&&(t.cookie={}),t.cookie.name==null&&(t.cookie.name="TT_MAP_EXTENT"),t.cookie.expirationDays==null&&(t.cookie.expirationDays=30)),this.log=new e,this._ttOptions=t,!this.apiKey&&!tomtom.proxyUrl&&this.log.warn('An API Key has not been specified.  TomTom services will not work without an API Key. Please specify an API key either via the tomtom.apiKey variable OR by passing the apiKey to the service\'s constructor: var service = new tomtom.services.GeocodeService("your key here");'),this._loadMap()},getLayerByName:function(e){var t=this.getLayersByName(e);return t.length>0?t[0]:null},addMarker:function(e){this._defaultMarkerLayer.addMarker(e)},removeMarker:function(e){this._defaultMarkerLayer.removeMarker(e)},addPopupTransform:function(e,t){e.lonlat.transform(this.projection,this.getProjectionObject()),o.prototype.addPopup.apply(this,arguments)},addPopup:function(e,t){if(t)for(var n=this.popups.length-1;n>=0;--n)this.removePopup(this.popups[n]);e.map=this,this.popups.push(e);var r=e.draw(e.px);r&&(r.style.zIndex=this.Z_INDEX_BASE.Popup+this.popups.length,this.layerContainerDiv.appendChild(r))},addLayer:function(e){e.projection||(e.projection=this._userProjection),o.prototype.addLayer.apply(this,arguments)},setDisplayTraffic:function(e){this._displayTraffic=e,e?(clearInterval(this._trafficUpdateIntervalId),this._updateViewport(!0),this._trafficUpdateIntervalId=setInterval(r.hitch(this,function(){this._updateViewport(!0)}),u)):(this._trafficLayer&&(this.removeLayer(this._trafficLayer),this._trafficLayer.destroy(),this._trafficLayer=null),this._trafficIncidentLayer&&(this.removeLayer(this._trafficIncidentLayer),this._trafficIncidentLayer.destroy(),this._trafficIncidentLayer=null),clearInterval(this._trafficUpdateIntervalId))},destroy:function(){clearTimeout(this._viewportUpdateTimeoutId),clearInterval(this._trafficUpdateIntervalId),o.prototype.destroy.apply(this,arguments)},panToTransform:function(){var e=null;typeof arguments[0]=="number"&&typeof arguments[1]=="number"?e=new OpenLayers.LonLat(arguments[0],arguments[1]):e=arguments[0],e.transform(this._userProjection,this.getProjectionObject()),this.panTo(e)},setZoom:function(e){this.setCenter(this.getCenter(),e)},getTrafficModel:function(){return this.trafficModel},displayRoute:function(e,t,n){typeof t=="function"&&(n=t,t={}),t=t?t:{},this._currentRouteOptions=t,this.displayLoadingMessage("Calculating route..."),this._displayRouteId++,this._routePoints=[],this._originalRoutePoints=e,this._routingCallback=n,this._checkRoutePoints(this._displayRouteId,0,t)},displayRouteInstruction:function(e){if(this._routeLayer){var t=this._currentRoute.instructions.instruction[e],n=new tomtom.Popup({lonlat:new OpenLayers.LonLat(t.point.longitude,t.point.latitude),contentHTML:OpenLayers.String.format('<div class="olInstructionPopup"><img src="${iconUrl}" /><span class="road">${roadNumber} ${roadName}</span></div>',{iconUrl:OpenLayers.ImgPath+"instructions/"+t.iconPath,roadName:t.roadName,roadNumber:t.roadNumber})});this.setCenterTransform(t.point.longitude,t.point.latitude,d),this.addPopupTransform(n,!0),n.show()}},clearRouting:function(){this._routeLayer&&(this.removeLayer(this._routeLayer),this._routeLayer.destroy(),this._routeLayer=null),this._routeMarkerLayer&&(this.removeLayer(this._routeMarkerLayer),this._routeMarkerLayer.destroy(),this._routeMarkerLayer=null)},getCurrentRoute:function(){return this._currentRoute},zoomToExtentTransform:function(e,t){return r.isArray(e)&&(e=new OpenLayers.Bounds(e)),e.transform(this._userProjection,this.getProjectionObject()),o.prototype.zoomToExtent.apply(this,[e,t])},setContextMenu:function(e){this.contextMenu&&this.contextMenu.destroy(),this.contextMenu=e,e.addTarget(this.div,this),e.map||this.addControl(e)},getTrafficIncidents:function(){return this._trafficIncidentLayer&&this._trafficIncidentLayer.incidents?this._trafficIncidentLayer.incidents:null},isValidZoomLevel:function(e){return e!=null&&e>=2&&e<18},adjustZoom:function(e){return e>17?17:e<2?2:e},setCenterTransform:function(e,t,n){var r=null;typeof e=="number"?r=new OpenLayers.LonLat(e,t):(r=e,n=t),r.transform(this._userProjection,this.getProjectionObject()),this.setCenter(r,n)},displayLoadingMessage:function(e){this._loadingBackdrop||(this._loadingBackdrop=document.createElement("div"),i.addClass(this._loadingBackdrop,"loadingBackdrop"),this.div.appendChild(this._loadingBackdrop));if(!this._loadingMessage){this._loadingMessage=document.createElement("div"),i.addClass(this._loadingMessage,"loadingMessage"),this.div.appendChild(this._loadingMessage);var t=document.createElement("div");i.addClass(t,"image"),this._loadingMessage.appendChild(t);var n=document.createElement("div");i.addClass(n,"message"),this._loadingMessage.appendChild(n)}i.query(".message",this._loadingMessage).html(e),i.css(this._loadingBackdrop,"display","block"),i.css(this._loadingMessage,"display","block");var r=i.dimensions(this.div),s=i.dimensions(this._loadingMessage);i.css(this._loadingMessage,"top",(r.height-s.height)/2+"px"),i.css(this._loadingMessage,"left",(r.width-s.width)/2+"px")},hideLoadingMessage:function(){this._loadingBackdrop&&i.css(this._loadingBackdrop,"display","none"),this._loadingMessage&&i.css(this._loadingMessage,"display","none")},_checkRoutePoints:function(e,t,n){if(this._displayRouteId!=e)return;var i=this._originalRoutePoints[t];if(typeof i=="string"){var s=new tomtom.services.GeocodingService(this.apiKey);s.geocode(i,r.hitch(this,function(r){if(this._displayRouteId!=e)return;if(r.geoResponse&&r.geoResponse.geoResult){var i=r.geoResponse.geoResult,s=null;i.length!=null?s={lat:i[0].latitude,lon:i[0].longitude}:s={lat:i.latitude,lon:i.longitude},this._routePoints.push(s),t++,t>=this._originalRoutePoints.length?this._getRoute(e,n):this._checkRoutePoints(e,t,n)}else n.callback&&n.callback({error:"Geocode failed for point "+t})}))}else t>=this._originalRoutePoints.length?this._getRoute(e,n):(this._routePoints.push(this._originalRoutePoints[t]),this._checkRoutePoints(e,t+1,n))},_getRoute:function(e,t,n){typeof n=="undefined"&&(n=!0);if(this._displayRouteId!=e)return;var i=new tomtom.services.RoutingService(this.apiKey);this.trafficModel&&(t.trafficModelId=this.trafficModel),t.pathPoints=17,i.getRoute(this._routePoints,t,r.hitch(this,function(e){this._displayingRoute=!0;if(e.route){this._currentRoute=e.route;if(n){var t=e.route.summary.bbox,r=new OpenLayers.Bounds(t.bottomLeft.longitude,t.bottomLeft.latitude,t.topRight.longitude,t.topRight.latitude);r.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.zoomToExtent(r,!1)}this._addRouteLayer(),this._routingCallback&&this._routingCallback(e)}else this.log.error("An error occurred during routing",e),this.hideLoadingMessage();this._displayingRoute=!1}))},_addRouteLayer:function(){if(this._currentRoute){this._routeLayer&&(this.removeLayer(this._routeLayer),this._routeLayer.destroy(),this._routeLayer=null),this._routeMarkerLayer?this._routeMarkerLayer.clearMarkers():(this._routeMarkerLayer=new tomtom.layers.MarkerLayer(tomtom.Map.MARKER_LAYER_ROUTING),this.addLayer(this._routeMarkerLayer),this.setLayerIndex(this._routeMarkerLayer,h)),this._routeLayer=new OpenLayers.Layer.Vector("TomTom.RouteLayer",{renderers:OpenLayers.Layer.Vector.prototype.renderers}),this.addLayer(this._routeLayer),this.setLayerIndex(this._routeLayer,l);var e=this._currentRoute.pathPoints.latitude,t=this._currentRoute.pathPoints.longitude,n=[];if(e.length>0){var r=e[0],i=t[0];for(var s=0;s<e.length;s++){s>0&&(r+=e[s],i+=t[s]);var o=new OpenLayers.Geometry.Point(i,r);o.transform("EPSG:4326","EPSG:900913"),n.push(o)}var u=new OpenLayers.Geometry.LineString(n),a=29.1260504202,f=-789.260504202,c=5e3,p=this.getZoom(),d=a*p*p+f*p+c;d<0&&(d=0),u=u.simplify(d);var v=new OpenLayers.Feature.Vector(u,null,this.routeStyle);this._routeLayer.addFeatures([v])}this.hideLoadingMessage();var m=this._currentRoute.instructions.instruction,g=m[0],y=m[m.length-1];this._routeMarkerLayer.addMarker(new tomtom.Marker(g.point.longitude,g.point.latitude,tomtom.Map.MARKER_OPTIONS_ROUTE_START)),this._routeMarkerLayer.addMarker(new tomtom.Marker(y.point.longitude,y.point.latitude,tomtom.Map.MARKER_OPTIONS_ROUTE_END))}},_updateViewport:function(e){var t=new tomtom.services.ViewportService(this.apiKey);t.getViewportModel(this.getExtent(),this.getZoom(),this.getExtent(),this.getZoom(),{projection:"EPSG900913",copyright:!1},r.hitch(this,function(t){if(t.viewpResp){this._updateAttribution(t.viewpResp);if(e&&this._displayTraffic&&t.viewpResp.trafficState&&t.viewpResp.trafficState["@trafficModelId"]){var n=this.trafficModel=t.viewpResp.trafficState["@trafficModelId"];this._trafficLayer==null?(this._trafficLayer=new tomtom.layers.TrafficLayer(this.apiKey,n),this.addLayer(this._trafficLayer),this.setLayerIndex(this._trafficLayer,f)):this._trafficLayer.update(n),this._trafficIncidentLayer==null?(this._trafficIncidentLayer=new tomtom.layers.TrafficIncidentLayer(tomtom.Map.MARKER_LAYER_TRAFFIC,this.apiKey,n),this.addLayer(this._trafficIncidentLayer),this.setLayerIndex(this._trafficIncidentLayer,c),this._trafficIncidentLayer.userProjection=new OpenLayers.Projection("EPSG:900913"),this._trafficIncidentLayer.update(!0,n)):this._trafficIncidentLayer.update(!0,n)}}else this.log.error("An error occurred getting the viewport model.",t)}))},_registerViewportUpdateTimeout:function(){clearTimeout(this._viewportUpdateTimeoutId),this._viewportUpdateTimeoutId=setTimeout(r.hitch(this,function(){this._trafficIncidentLayer&&this._trafficIncidentLayer.update(!0,this.trafficModel),this._updateViewport(!0)}),500)},_loadMap:function(){var e=OpenLayers.Util.applyDefaults(this._ttOptions,{div:this._ttOptions.domNode,controls:[new OpenLayers.Control.Navigation({dragPanOptions:{enableKinetic:!0},mouseWheelOptions:{interval:100}})],numZoomLevels:18,theme:null,maxExtent:new OpenLayers.Bounds(-20037508.3427892,-20037508.3427892,20037508.3427892,20037508.3427892),restrictedExtent:new OpenLayers.Bounds(-999999999,-20037508.3427892,999999999,20037508.3427892)});this._userProjection=e.projection?e.projection:new OpenLayers.Projection("EPSG:4326"),e.layers||(e.layers=[new tomtom.layers.MapLayer(this.apiKey)]),e.center&&e.center.transform(this._userProjection,"EPSG:900913"),OpenLayers.Map.prototype.initialize.apply(this,[e]),this._defaultMarkerLayer=new tomtom.layers.MarkerLayer(tomtom.Map.MARKER_LAYER_DEFAULT),this.addLayer(this._defaultMarkerLayer),this.setLayerIndex(this._defaultMarkerLayer,p),this._ttOptions.zoom||this.zoomToMaxExtent();if(e.cookie){var t=r.getCookie(this._ttOptions.cookie.name);if(t){var n=t.split(",");if(n.length>=3){var o=new OpenLayers.LonLat(n[0].trim(),n[1].trim());o.transform(new OpenLayers.Projection("EPSG:900913"),this.getProjectionObject()),this.setCenter(o,n[2])}}}if(e.overviewMap){var u=OpenLayers.Util.applyDefaults({maximized:!0,mapOptions:{theme:null,maxExtent:this.maxExtent,restrictedExtent:this.restrictedExtent,projection:"EPSG:900913"}},e.overviewMap);this.overviewMap=new s(u),this.addControl(this.overviewMap)}e.scale&&this.addControl(new OpenLayers.Control.ScaleLine),e.panZoomBar&&(typeof e!="object"&&(e={}),this.addControl(new tomtom.controls.PanZoomBar(e.panZoomBar))),e.routeStyle?this.routeStyle=OpenLayers.Util.applyDefaults(e.routeStyle,this._defaultRouteStyle):this.routeStyle=this._defaultRouteStyle,this.attributionControl=new OpenLayers.Control.Attribution,this.attributionControl.updateAttribution=r.hitch(this,function(){OpenLayers.Control.Attribution.prototype.updateAttribution.apply(this.attributionControl,arguments);var e=this.getLayersByClass("tomtom.layers.MapLayer");i.query("a",this.attributionControl.div).each(r.hitch(this,function(e){e.onclick=r.hitch(this,function(t){this._attributionClick(i.attr(e,"data-id"),e,t)})}))}),this.addControl(this.attributionControl),this.events.register("moveend",this,this._handleMapMove),this.events.register("zoomend",this,this._handleZoomChange),this.events.register("click",this,this._handleMapClick),this.baseLayer.events.register("loadend",this,this._handleMapLoad),this.setLayerIndex(this.baseLayer,a)},_handleZoomChange:function(){this._addRouteLayer()},_handleMapClick:function(){for(var e=this.popups.length-1;e>=0;--e)this.removePopup(this.popups[e])},_handleMapMove:function(){this._ttOptions.cookie&&r.setCookie(this._ttOptions.cookie.name,this.getCenter().toShortString()+","+this.getZoom(),this._ttOptions.cookieExpirationDays),this._registerViewportUpdateTimeout(),this.overviewMap&&this.overviewMap.updateOverview()},_handleMapLoad:function(){this.baseLayer.events.unregister("loadend",this,this._handleMapLoad),this._trafficIncidentLayer&&this._trafficIncidentLayer.update(!0,this.trafficModel),this.events.triggerEvent("mapload",{});var e=new tomtom.services.InitializeService(this.apiKey);e.getCopyrightInfo(r.hitch(this,function(e){var t=e.initializeResponse.copyright;for(var n=0;n<t.length;n++){var r=t[n];r&&(this._copyrightInfo[r["@id"]]=r)}this._ttOptions.displayTraffic?this.setDisplayTraffic(!0):this._updateViewport(!1)})),this.overviewMap&&this.overviewMap.updateOverview()},_updateAttribution:function(e){var t=this.getLayersByClass("tomtom.layers.MapLayer");if(t.length>0){t[0].attribution="";var n=e.copyrightIds.toString().split("^");for(var r=0;r<n.length;r++){var i=this._copyrightInfo[n[r]];i&&(t[0].attribution+='<a href="javascript:void(0);" data-id="'+i["@id"]+'">'+i.label+"</a> ")}this.attributionControl.updateAttribution()}},_attributionClick:function(e,t,n){if(e){var s=this._copyrightInfo[e];if(s){var o=i.position(t.parentNode),u=i.position(t),a=i.dimensions(t),f=new OpenLayers.Pixel(o.left+u.left+a.width/2,o.top);s.popup&&s.popup.destroy();var l=document.createElement("img");l.onload=r.hitch(this,function(){s.popup=new tomtom.Popup({contentHTML:'<div class="copyrightInfo"><img src="'+s.logo+'" class="copyrightLogo" />'+s.description+"</div>"}),s.popup.px=this.getLayerPxFromViewPortPx(f),s.popup.calculateRelativePosition=function(){return"tr"},this.addPopup(s.popup,!0),s.popup.moveTo(this.getLayerPxFromViewPortPx(f)),s.popup.show()}),l.src=s.logo,OpenLayers.Event.stop(n||event)}}}});var u=3e4,a=0,f=1,l=2,c=48,h=49,p=50,d=16,v=-117.64705;return tomtom.Map.MARKER_LAYER_DEFAULT="DEFAULT",tomtom.Map.MARKER_LAYER_TRAFFIC="TRAFFIC",tomtom.Map.MARKER_OPTIONS_ROUTE_START={url:"marker_start.png",width:43,height:49,offsetWidth:-11,offsetHeight:-41},tomtom.Map.MARKER_OPTIONS_ROUTE_END={url:"marker_finish.png",width:43,height:49,offsetWidth:-11,offsetHeight:-41},tomtom.Map}),tomtom.require("Map")