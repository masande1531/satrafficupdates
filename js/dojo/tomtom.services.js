define("tomtom/OpenLayers",[],function(){return OpenLayers}),define("tomtom/Main",["./OpenLayers"],function(){window.tomtom||(window.tomtom={}),window.tomtom.dom={},window.tomtom.layers={},window.tomtom.services={},window.tomtom.controls={},typeof String.prototype.trim!="function"&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(this==null)throw new TypeError;var t=Object(this),n=t.length>>>0;if(n===0)return-1;var r=0;arguments.length>0&&(r=Number(arguments[1]),r!=r?r=0:r!=0&&r!=Infinity&&r!=-Infinity&&(r=(r>0||-1)*Math.floor(Math.abs(r))));if(r>=n)return-1;var i=r>=0?r:Math.max(n-Math.abs(r),0);for(;i<n;i++)if(i in t&&t[i]===e)return i;return-1}),window.tomtom.setImagePath=function(e){OpenLayers.ImgPath=e},tomtom.setImagePath("./images/"),window.tomtom.API_BASE_URL="https://api.tomtom.com/",window.tomtom.releaseInfo={version:"1.0.5-RELEASE",build:"DEV"},window.tomtom.isDebugMode=!1,window.tomtom.apiKey=null,window.tomtom.languages={en_US:{units:{distance:{meter:"m;; m",km:"km;; km",yard:"yd;; yds",mile:"mi;; mi"},time:{day:"day;; days",hour:"hour;; hours",minute:"min;; mins"}},errors:{Unknown:"Sorry, an error occurred. Please try again or come back later"},IncidentItem:{from:"From",to:"To",delay:"Delay",length:"Length"},IncidentBalloon:{Cluster:{title:"Incidents in this area: ",listHeader:"{count} most severe incidents",orderedByLength:"(Ordered by length)",orderedByDelay:"(Ordered by delay)"},zoomIn:"Click to zoom in"}}}}),define("tomtom/Logger",["./Main","./OpenLayers"],function(){return tomtom.Logger=OpenLayers.Class({initialize:function(){},info:function(){this._log("info",arguments)},debug:function(){this._log("debug",arguments)},log:function(){this._log("log",arguments)},error:function(){this._log("error",arguments)},warn:function(){this._log("warn",arguments)},_log:function(e,t){if(!tomtom.isDebugMode&&(e=="log"||e=="debug"))return;if(typeof console!="undefined"){var n=console[e];n?n.apply?n.apply(console,t):n(t[0]):n!="log"&&this._log("log",t)}}}),tomtom.Logger}),define("tomtom/Utils",["./Main"],function(){tomtom.Utils={hostIndex:0,hosts:[],getServiceUrl:function(e,t,n,r){var i=tomtom.API_BASE_URL;if(t){paramCount=0,e.indexOf("?")==-1&&(e+="?");for(var s in t)paramCount>0&&(e+="&"),e+=s+"="+t[s],paramCount++}return tomtom.proxyUrl&&(i=tomtom.proxyUrl),typeof r!="undefined"&&(r?i=i.replace(/https?:\/\//g,"https://"):i=i.replace(/https?:\/\//g,"http://")),n&&(i="http://"+this.getRandomHost(i)),i+e},getRandomHost:function(e){e=e.replace(/https?:\/\//g,"");if(typeof tomtom.enableHostCycling=="undefined"||tomtom.enableHostCycling)this.hosts.length==0&&this.initHosts(),e=this.hosts[this.hostIndex],this.hostIndex++,this.hostIndex>3&&(this.hostIndex=0);return e},initHosts:function(){var e=tomtom.API_BASE_URL;tomtom.proxyUrl&&(e=tomtom.proxyUrl),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"a.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"b.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"c.")),tomtom.Utils.hosts.push(e.replace(/https?:\/\//g,"d."))},isArray:function(e){return Object.prototype.toString.call(e)==="[object Array]"},zeroPad:function(e,t){e=String(e);var n=[];for(var r=0;r<t;++r)n.push("0");return n.join("").substring(0,t-e.length)+e},hitch:function(e,t){return function(){return t.apply(e,arguments)}},setCookie:function(e,t,n){if(n){var r=new Date;r.setTime(r.getTime()+n*24*60*60*1e3);var i="; expires="+r.toGMTString()}else var i="";document.cookie=e+"="+t+i+"; path=/"},getCookie:function(e){var t=e+"=",n=document.cookie.split(";");for(var r=0;r<n.length;r++){var i=n[r];while(i.charAt(0)==" ")i=i.substring(1,i.length);if(i.indexOf(t)==0)return i.substring(t.length,i.length)}return null},removeCookie:function(e){this.setCookie(e,"",-1)},formatSeconds:function(e){if(e==0)return"0 min";if(e<60)return e+" secs";if(e>=60&&e<=3600)return this.round(e/60,1)+" mins";if(e>=3600)return this.round(e/3600,1)+" hours"},metersToMiles:function(t){return t*e/5280},round:function(e,t){return Math.round(e*Math.pow(10,t))/Math.pow(10,t)}};var e=3.28084,t=5280;return tomtom.Utils}),define("tomtom/BaseObject",["./Main","./Logger","./Utils","./OpenLayers"],function(e,t,n){return tomtom.BaseObject=OpenLayers.Class({initialize:function(){this.log=new t},hitch:function(e){return n.hitch(this,e)}}),tomtom.BaseObject}),define("tomtom/services/BaseService",["../BaseObject"],function(e){return tomtom.services.BaseService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,[]),t?this.apiKey=t:this.apiKey=tomtom.apiKey,!this.apiKey&&!tomtom.proxyUrl&&this.log.warn('An API Key has not been specified.  TomTom services will not work without an API Key. Please specify an API key either via tomtom.apiKey OR by passing the apiKey to the service\'s constructor: var service = new tomtom.services.GeocodeService("your key here");')}}),tomtom.services.BaseService}),define("tomtom/dom/DomUtilResult",["../BaseObject","../Utils","../OpenLayers"],function(e,t){return tomtom.dom.DomUtilResult=OpenLayers.Class(e,{initialize:function(e,t){this.elements=e,this.dutil=t},html:function(e){if(e==null){var t=this.first();return t?t.innerHTML:null}return this.each(function(t){t.innerHTML=e}),this},css:function(e,t){if(t==null){var n=this.first();return n?this.dutil.css(n,e):null}this.each(this.hitch(function(n){this.dutil.css(n,e,t)}))},append:function(e){if(typeof e=="string")this.each(function(t){t.innerHTML+=e});else{var t=this.first();t&&t.appendChild(e)}return this},first:function(){return this.get(0)},get:function(e){return e==null&&(e=0),this.elements.length>e?this.elements[e]:null},each:function(e){if(!this.elements.length)return e(this.elements,0),this;for(var t=0;t<this.elements.length;t++){var n=e(this.elements[t],t);if(n===!1)break}return this},val:function(e){if(e==undefined){var t=this.first();return t&&t.value?t.value:null}this.dutil.val(this.elements,e)},find:function(e){return this.dutil.query(e,this.elements)},bind:function(e,t,n){return this.dutil.bind(this.elements,e,t,n)},attr:function(e,t){return this.dutil.attr(this.elements,e,t)},data:function(e,t){return this.dutil.data(this.elements,e,t)},removeAttr:function(e){return this.dutil.removeAttr(this.elements,e),this},next:function(e){return this.dutil.next(this.elements,e)},prev:function(e){return this.dutil.prev(this.elements,e)},children:function(e){return this.dutil.children(this.elements,e)},length:function(){return this.elements.length},addClass:function(e){return this.dutil.addClass(this.elements,e),this},removeClass:function(e){return this.dutil.removeClass(this.elements,e),this},offset:function(){return this.dutil.offset(this.first())},position:function(){return this.dutil.position(this.first())},offsetHeight:function(){var e=this.first();return e?e.offsetHeight:null},offsetWidth:function(){var e=this.first();return e?e.offsetWidth:null}}),tomtom.dom.DomUtilResult}),define("tomtom/dom/DomUtil",["../BaseObject","./DomUtilResult","../OpenLayers"],function(e){return tomtom.dom.DomUtil=OpenLayers.Class(e,{initialize:function(){},query:function(e,t){},animate:function(e,t){},css:function(e,t,n){},offset:function(e){},jsonp:function(e){},bind:function(e,t,n,r){},unbind:function(e){},mixin:function(e,t){},addClass:function(e,t){},removeClass:function(e,t){},wrap:function(e){return new tomtom.dom.DomUtilResult(e,this)},empty:function(e){while(e.children.length>0)e.removeChild(e.children[0]);return new tomtom.dom.DomUtilResult(e,this)},html:function(e,t){typeof t=="string"?e.innerHTML=t:(this.empty(e),e.appendChild(t))},append:function(e,t){return typeof t=="string"?e.innerHTML+=t:e.appendChild(t),new tomtom.dom.DomUtilResult(e,this)},unbindAll:function(e){for(var t=0;t<e.length;t++)this.unbind(e[t])},attr:function(e,t,n){},removeAttr:function(e,t){},data:function(e,t,n){},val:function(e,t){},next:function(e,t){},prev:function(e,t){},children:function(e,t){},viewport:function(){},dimensions:function(e){}}),tomtom.dom.DomUtil}),define("tomtom/DomUtil",["./dom/DomUtil","dojo/dom-style","dojo/query","dojo/_base/fx","dojo/dom-geometry","dojo/fx/easing","dojo/_base/connect","./dom/DomUtilResult","./Utils","dojo/NodeList-dom","dojo/io/script","dojo/_base/lang","dojo/dom-class","dojo/dom-attr","dojo/NodeList-data","dojo/NodeList-manipulate","dojo/NodeList-traverse","dojo/_base/array","dojo/window","dojo/_base/xhr"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b){tomtom.dom.DomUtilDojo=OpenLayers.Class(e,{initialize:function(){},query:function(e,t){return t&&(this._isNodeList(t)||t.query)?new u(t.query(e),this):new u(n(e,t),this)},animate:function(e,t){t||(t={});var n=null;return t.easing&&(n=tomtom.dom.DomUtilDojo.getEasingFunction(t.easing)),r.animateProperty({node:e,properties:t.properties,easing:n,duration:t.duration,onEnd:t.callback}).play(),new u(e,this)},offset:function(e){var t=i.position(e);return{top:t.x,left:t.y}},dimensions:function(e){var t=i.getMarginBox(e),n=i.position(e);return{width:n.w,height:n.h,outerWidth:t.w,outerHeight:t.h}},position:function(e){var t=i.getMarginBox(e);return{top:t.t,left:t.l}},css:function(e,n,r){return r!=null?(t.set(e,n,r),new u(e,this)):t.get(e,n)},jsonp:function(e){l.get({url:e.url,callbackParamName:e.callbackParam,content:e.data,load:e.callback,error:e.errorCallback})},getJson:function(e){b.get({url:e.url,handleAs:"json",load:e.callback,content:e.data,error:e.errorCallback})},bind:function(e,t,n,r){return this._isNodeList(e)||e.on?e.on(t,r?dojo.hitch(r,n):n):o.connect(e,"on"+t,e,r?dojo.hitch(r,n):n)},unbind:function(e){o.disconnect(e)},mixin:function(e,t){return c.mixin(e,t)},addClass:function(e,t){this._isNodeList(e)||a.isArray(e)?g.forEach(e,function(e){h.add(e,t)}):h.add(e,t)},removeClass:function(e,t){this._isNodeList(e)||a.isArray(e)?g.forEach(e,function(e){h.remove(e,t)}):h.remove(e,t)},attr:function(e,t,n){return n!=null?(p.set(e,t,n),new u(e,this)):p.get(e,t)},removeAttr:function(e,t){return p.remove(e,t),new u(e,this)},data:function(e,t,n){return n!==undefined?(d(e).data(t,n),new u(e,this)):d(e).data(t)},val:function(e,t){return t!=undefined?(v(e).val(t),new u(e,this)):v(e).val()},next:function(e,t){return new u(m(e).next(t),this)},prev:function(e,t){return new u(m(e).prev(t),this)},children:function(e,t){return new u(m(e).childen(t),this)},viewport:function(){var e=y.getBox();return{width:e.w,height:e.h}},_isNodeList:function(e){return Object.prototype.toString.call(e)==="[object NodeList]"}}),tomtom.dom.DomUtilDojo.getEasingFunction=function(e){var t="";switch(e){case"easeOutBounce":t="bounceOut";break;case"easeInBounce":t="bounceIn";break;case"easeOutCirc":t="circOut"}return s[t]};var w=500;return new tomtom.dom.DomUtilDojo}),define("tomtom/services/GeocodingService",["./BaseService","../DomUtil","../Utils"],function(e,t,n){tomtom.services.GeocodingService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},geocode:function(e,i,s,o){typeof i=="function"&&(o=s,s=i,i={});var u={q:e};this.apiKey&&(u.key=this.apiKey),t.mixin(u,i),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(r,u),callback:s,errorCallback:o}):t.jsonp({url:n.getServiceUrl(r+"p",u),callback:s,callbackParam:"jsonp",errorCallback:o})},reverseGeocode:function(e,r,s,o,u){typeof s=="function"&&(u=o,o=s,s={});var a={point:r+","+e,projection:"EPSG4326"};t.mixin(a,s),this.apiKey&&(a.key=this.apiKey),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(i,a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(i+"p",a),callback:o,errorCallback:u,callbackParam:"jsonp"})}});var r="lbs/services/geocode/3/json",i="lbs/services/reverseGeocode/3/json";return tomtom.services.GeocodingService}),define("tomtom/services/RoutingService",["./BaseService","../DomUtil","../Utils","../OpenLayers"],function(e,t,n){tomtom.services.RoutingService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getRoute:function(e,s,o,u){typeof s=="function"&&(u=o,o=s,s={}),this.apiKey&&(s.key=this.apiKey);var a=t.mixin({},s);a.routeType&&delete a.routeType,s.routeType||(s.routeType=i);var f=[];for(var l=0;l<e.length;l++){var c=e[l];f.push(c.lat+","+c.lon)}var h={points:f.join(":"),routeType:s.routeType};tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,h),a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",h),a),callback:o,callbackParam:"jsonp",errorCallback:u})}});var r="lbs/services/route/3/${points}/${routeType}/json",i="Quickest";return tomtom.services.RoutingService}),define("tomtom/i18n",["./Utils","./Main","./OpenLayers"],function(e){function l(e,t){if(e&&e.indexOf(".")>-1){var n=e.split("."),r=n.length-1;for(var i=0;i<r&&t;i++)t=t[n[i]];return e=n[i],t&&t[e]||undefined}return t[e]}var t=/{([\w_]+)}/g,n=/^([a-z]{2})([-_])([a-z]{2})/i,r=/;; ?/,i=null,s={},o=null,u="en_US",a={_rules:[[1,function(e){return 0}],[2,function(e){return e!=1?1:0}],[2,function(e){return e>1?1:0}],[3,function(e){return e%10==1&&e%100!=11?1:e!=0?2:0}],[4,function(e){return e==1||e==11?0:e==2||e==12?1:e>0&&e<20?2:3}],[3,function(e){return e==1?0:e==0||e%100>0&&e%100<20?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?2:1}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==1?0:e>=2&&e<=4?1:2}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[4,function(e){return e%100==1?0:e%100==2?1:e%100==3||e%100==4?2:3}],[5,function(e){return e==1?0:e==2?1:e>=3&&e<=6?2:e>=7&&e<=10?3:4}],[6,function(e){return e==0?5:e==1?0:e==2?1:e%100>=3&&e%100<=10?2:e%100>=11&&e%100<=99?3:4}],[4,function(e){return e==1?0:e==0||e%100>0&&e%100<=10?1:e%100>10&&e%100<20?2:3}],[3,function(e){return e%10==1?0:e%10==2?1:2}],[2,function(e){return e%10==1&&e%100!=11?0:1}]],_languages:{"hu-HU":0,"id-ID":0,"ms-MY":0,"th-TH":0,"tr-TR":0,"zh-CN":0,"zh-TW":0,de:1,en:1,es:1,it:1,nl:1,pt:1,"af-ZA":1,"ca-ES":1,"da-DK":1,"de-DE":1,"en-GB":1,"en-US":1,"es-ES":1,"es-MX":1,"it-IT":1,"nl-BE":1,"nl-NL":1,"no-NO":1,"pt-BR":1,"pt-PT":1,"sv-SE":1,"et-EE":1,"fi-FI":1,"bg-BG":1,"el-GR":1,fr:2,"fr-CA":2,"fr-FR":2,"lv-LV":3,"lt-LT":6,"hr-HR":7,"ru-RU":7,"cs-CZ":8,"sk-SK":8,"pl-PL":9,"sl-SI":10},getPluralForm:function(e){var t=a._rules,i;if(isNaN(e)&&"string"==typeof e)if(e in a._languages)i=a._languages[e];else{var s=e.match(n);i=s&&a._languages[s[1]]}else i=Number(e);if(i==null||isNaN(i)||i<0||i>t.length)i=0;var o=t[i][1];return function(e,t){if("string"!=typeof e)return;t=isNaN(t)?1:t<0?0:t;var n=o(t),i=e?e.split(r):[""],s=n<i.length?i[n]:i[i.length-1];return s}}},f={_locale:"",getLocale:function(){return this._locale},setLocale:function(e){this._locale=e,o=a.getPluralForm(this._locale),i=tomtom.languages[this._locale]},getCountryCode:function(){var e=this._locale.match(n);return e&&e[3]||null},getPrimaryLanguage:function(){return this._locale.substr(0,2)},hasLocalizedStrings:function(){return"object"==typeof i&&i!=null},setLocaleRule:function(t,n,r){var i=t=="*",o=e.isArray(t),u=this._locale==t||o&&t.indexOf(this._locale)>-1;if(!i&&!u){var a=this.getCountryCode(),f=a==t||o&&t.indexOf(a)>-1;if(!f)return}"function"==typeof r&&(s[n]=e.hitch(new c(n),r))}},c=OpenLayers.Class({initialize:function h(e,t){var n={},r,s;t&&(s=t._branch,this._pathKey=t._pathKey?t._pathKey+"."+e:e),s=s||i||h._branch||n,r=s==n?n:l(e,s),this._branch="object"==typeof r?r:null}});c._branch=null,c._pathKey="",c._pluralFormRule=null,c.getBranch=function(e){return new c(e,this)},c.getString=function(e,n,r){var u=this._branch||i||{},a=l(e,u),f=(this._pathKey?this._pathKey+".":"")+e,c=s[f];if(c)return c(n,r);var h=this._pluralFormRule||o;return h&&(a=h(a,r)),"string"==typeof a?(n&&(a=a.replace(t,function(e,t){return t in n?n[t]:"#"+t+"#"})),a):"#"+e+"#"},c.prototype._pathKey=c._pathKey,c.prototype._branch=c._branch,c.prototype.getBranch=c.getBranch,c.prototype.getString=c.getString,f.setLocale(u),f.setLocaleRule("*","units.distance",function(e,t){var n=t/1e3;return t<500?t+" "+this.getString("meter",null,t):n.toFixed(1)+" "+this.getString("km",null,n)}),f.setLocaleRule(["en_GB","en_US"],"units.distance",function(e,t){var n=Math.round(t*.10936133)*10,r=n/1760;return r<.5?Math.round(n)+" "+this.getString("yard",null,n):r.toFixed(1)+" "+this.getString("mile",null,r)}),f.setLocaleRule("*","common.TomTom.HDTraffic",function(){return"HD Traffic"}),tomtom.LocaleManager=f,tomtom.StringBundle=c,tomtom.PluralForm=a}),define("tomtom/services/TrafficService",["./BaseService","../DomUtil","../Utils","../OpenLayers","../i18n"],function(e,t,n){tomtom.services.TrafficService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getTrafficModel:function(e,i,s,o,u){typeof s=="function"&&(u=o,o=s,s={}),s.projection||(s.projection="EPSG4326");var a=t.mixin({},s);s.trafficModelID||(s.trafficModelID=-1),a.trafficModelID&&delete a.trafficModelID,a.language||(a.language=tomtom.LocaleManager.getPrimaryLanguage()),s.zoom=i,e=new OpenLayers.Bounds(e.left,e.bottom,e.right,e.top),s.minY=e.top,s.minX=e.left,s.maxY=e.bottom,s.maxX=e.right,this.apiKey&&(a.key=this.apiKey),a.expandCluster=!0,tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,s),a),callback:o,errorCallback:u}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",s),a),callback:o,callbackParam:"jsonp",errorCallback:u})}});var r="lbs/services/trafficIcons/3/s2/${minY},${minX},${maxY},${maxX}/${zoom}/${trafficModelID}/json";return tomtom.services.TrafficService}),define("tomtom/services/ViewportService",["./BaseService","../DomUtil","../Utils"],function(e,t,n){tomtom.services.ViewportService=OpenLayers.Class(e,{initialize:function(t){e.prototype.initialize.apply(this,arguments)},getViewportModel:function(e,i,s,o,u,a,f){typeof u=="function"&&(f=a,a=u,u={}),e=new OpenLayers.Bounds(e.left,e.bottom,e.right,e.top),e.transform(new OpenLayers.Projection(u.projection?u.projection:"EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),s=new OpenLayers.Bounds(s.left,s.bottom,s.right,s.top),s.transform(new OpenLayers.Projection(u.projection?u.projection:"EPSG:4326"),new OpenLayers.Projection("EPSG:900913"));var l={box:e.bottom+","+e.left+","+e.top+","+e.right,zoom:i,overviewBox:s.bottom+","+s.left+","+s.top+","+s.right,overviewZoom:o,copyright:typeof u.copyright=="undefined"?!0:u.copyright};this.apiKey&&(u.key=this.apiKey),tomtom.proxyUrl?t.getJson({url:n.getServiceUrl(OpenLayers.String.format(r,l),u),callback:a,errorCallback:f}):t.jsonp({url:n.getServiceUrl(OpenLayers.String.format(r+"p",l),u),callback:a,callbackParam:"jsonp",errorCallback:f})}});var r="lbs/services/viewportDesc/3/${box}/${zoom}/${overviewBox}/${overviewZoom}/${copyright}/json";return tomtom.services.ViewportService})